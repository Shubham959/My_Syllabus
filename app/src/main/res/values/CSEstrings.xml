<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="csesem1sub1">Chemistry</string>
    <string name="chemistrycse">\n\n\n

        <b><font fgcolor='#F700FF'>L:3 T:1 P:3 Credit 5.5 </font></b>\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 1: ATOMIC AND MOLECULAR STRUCTURE (10 LECTURES)</font></b>\n\n\n

FAILURE OF CLASSICAL NEWTONIAN AND MAXWELL WAVE MECHANICS TO EXPLAIN PROPERTIES OF PARTICLES AT ATOMIC AND SUB-ATOMIC LEVEL; ELECTROMAGNETIC RADIATION, DUAL NATURE OF ELECTRON AND ELECTROMAGNETIC RADIATION, PLANKS THEORY, PHOTOELECTRIC EFFECT AND HEISENBERG UNCERTAINTY PRINCIPLE. FAILURE OF EARLIER THEORIES TO EXPLAIN CERTAIN PROPERTIES OF MOLECULES LIKE PARAMAGNETIC PROPERTIES. PRINCIPLES FOR COMBINATION OF ATOMIC ORBITALS TO FORM MOLECULAR ORBITALS. FORMATION OF HOMO AND HETERO DIATOMIC MOLECULES AND PLOTS OF ENERGY LEVEL DIAGRAM OF MOLECULAR ORBITALS. COORDINATION NUMBERS AND GEOMETRIES, ISOMERISM IN TRANSITIONAL METAL COMPOUNDS, CRYSTAL FIELD THEORY AND THE ENERGY LEVEL DIAGRAMS FOR TRANSITION METAL IONS AND THEIR MAGNETIC PROPERTIES.\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 2: SPECTROSCOPIC TECHNIQUES AND APPLICATIONS (8 LECTURES)</font></b>\n\n\n

PRINCIPLES OF VIBRATIONAL AND ROTATIONAL SPECTROSCOPY AND SELECTION RULES FOR APPLICATION IN DIATOMIC MOLECULES. ELEMENTARY IDEA OF ELECTRONIC SPECTROSCOPY. UV-VIS SPECTROSCOPY WITH RELATED RULES AND ITS APPLICATIONS. FLUORESCENCE AND ITS APPLICATIONS IN MEDICINE. BASIC PRINCIPLE OF NUCLEAR MAGNETIC RESONANCE AND ITS APPLICATION. BASICS OF MAGNETIC RESONANCE IMAGING.\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 3: INTERMOLECULAR FORCES AND PROPERTIES OF GASES (4 LECTURES)</font></b>\n\n\n

IONIC, DIPOLAR AND VAN DER WAALS INTERACTIONS. EQUATIONS OF STATE OF IDEAL AND REAL GASES, DEVIATION FROM IDEAL BEHAVIOUR. VANDER WAAL GAS EQUATION.\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 4: USE OF FREE ENERGY IN CHEMICAL EQUILIBRIA and WATER CHEMISTRY (8 LECTURES)</font></b>\n\n\n

THERMODYNAMIC FUNCTIONS: ENERGY, ENTHALPY ENTROPY AND FREE ENERGY. EQUATIONS TO INTERRELATE THERMODYNAMIC PROPERTIES. FREE ENERGY, EMF. AND CELL POTENTIALS, THE NERNST EQUATION AND APPLICATIONS. CORROSION. USE OF FREE ENERGY CONSIDERATIONS IN METALLURGY THROUGH ELLINGHAM DIAGRAMS. SOLUBILITY EQUILIBRIA.\n\n\n

WATER CHEMISTRY, HARD AND SOFT WATER. PARAMETERS OF QUALITY OF WATER TO BE USED IN DIFFERENT INDUSTRIES AS FOR DRINKING WATER. CALCULATION OF HARDNESS OF WATER IN ALL UNITS. ESTIMATION OF HARDNESS USING EDTA AND ALKALINITY METHOD. REMOVAL OF HARDNESS BY SODA LIME AND ION EXCHANGE METHOD INCLUDING ZEOLITE METHOD\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 5: PERIODIC PROPERTIES (4 LECTURES)</font></b>\n\n\n

EFFECTIVE NUCLEAR CHARGE, PENETRATION OF ORBITALS, VARIATIONS OF S, P, D AND F ORBITAL ENERGIES OF ATOMS IN THE PERIODIC TABLE, ELECTRONIC CONFIGURATIONS, ATOMIC AND IONIC SIZES, IONIZATION ENERGIES, ELECTRON AFFINITY AND

ELECTRONEGATIVITY, POLARIZABILITY, ACID, BASE, PRINCIPLE OF HSAB THEORY, OXIDATION STATES, HYBRIDIZATION AND MOLECULAR GEOMETRIES.\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 6: STEREOCHEMISTRY (4 LECTURES)</font></b>\n\n\n

REPRESENTATIONS OF 3-D STRUCTURES, STRUCTURAL ISOMERS AND STEREOISOMERS, CONFIGURATIONS AND SYMMETRY AND CHIRALITY, ENANTIOMERS, DIASTEREOMERS, OPTICAL ACTIVITY, ABSOLUTE CONFIGURATIONS AND CONFORMATIONAL ANALYSIS.\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 7: ORGANIC REACTIONS AND SYNTHESIS OF A DRUG MOLECULE (4 LECTURES)</font></b>\n\n\n

INTRODUCTION TO INTERMEDIATES AND REACTIONS INVOLVING SUBSTITUTION, ADDITION, ELIMINATION, OXIDATION-REDUCTION, DIELS ELDER CYCLIZATION AND EPOXIDE RING OPENINGS REACTIONS. SYNTHESIS OF A COMMONLY USED DRUG MOLECULE LIKE ASPIRIN.\n\n\n

        <b><font fgcolor='#F700FF'>SUGGESTED TEXT BOOKS:</font></b>\n\n\n

~ UNIVERSITY CHEMISTRY, BY B. H. MAHAN\n\n\n

~CHEMISTRY: PRINCIPLES AND APPLICATIONS, BY M. J. SIENKO AND R. A. PLANE\n\n\n

~FUNDAMENTALS OF MOLECULAR SPECTROSCOPY, BY C. N. BANWELL\n\n\n

~ENGINEERING CHEMISTRY (NPTEL WEB-BOOK), BY B. L. TEMBE, KAMALUDDIN AND M. S. KRISHNAN\n\n\n

~PHYSICAL CHEMISTRY, BY P. W. ATKINS\n\n\n

~ ORGANIC CHEMISTRY: STRUCTURE AND FUNCTION BY K. P. C. VOLHARDT AND N. E. SCHORE, 5TH EDITION\n\n\n

~HTTP://BCS.WHFREEMAN.COM/VOLLHARDTSCHORESE /DEFAULT.ASP\n\n\n

        <b><font fgcolor='#F700FF'>CHEMISTRY LABORATORY CHOICE OF 10-12 EXPERIMENTS FROM THE FOLLOWING</font></b>\n\n\n

~DETERMINATION OF SURFACE TENSION AND VISCOSITY\n\n\n

~THIN LAYER CHROMATOGRAPHY\n\n\n

~ION EXCHANGE COLUMN FOR REMOVAL OF HARDNESS OF\n\n\n

        <b><font fgcolor='#F700FF'>WATER</font></b>\n\n\n

~DETERMINATION OF CHLORIDE CONTENT OF WATER\n\n\n

~COLLIGATIVE PROPERTIES USING FREEZING POINT DEPRESSION\n\n\n

~DETERMINATION OF THE RATE CONSTANT OF A REACTION\n\n\n

~DETERMINATION OF CELL CONSTANT AND\n\n\n

        <b><font fgcolor='#F700FF'>CONDUCTANCE OF SOLUTIONS</font></b>\n\n\n

~ POTENTIOMETRY-DETERMINATION OF REDOX POTENTIALS AND EMFS\n\n\n

~SYNTHESIS OF A POLYMER/DRUG\n\n\n

~SAPONIFICATION/ACID VALUE OF AN OIL\n\n\n

~CHEMICAL ANALYSIS OF A SALT\n\n\n

~LATTICE STRUCTURES AND PACKING OF SPHERES\n\n\n

~MODELS OF POTENTIAL ENERGY SURFACES\n\n\n

~CHEMICAL OSCILLATIONS- IODINE CLOCK REACTION\n\n\n

~DETERMINATION OF THE PARTITION COEFFICIENT OF A SUBSTANCE BETWEEN TWO IMMISCIBLE LIQUIDS\n\n\n

~ADSORPTION OF ACETIC ACID BY CHARCOAL\n\n\n

~ USE OF THE CAPILLARY VISCOSIMETERS TO THE\n\n\n

DEMONSTRATE OF THE ISOELECTRIC POINT AS THE PH OF MINIMUM VISCOSITY FOR GELATIN SOLS AND/OR COAGULATION OF THE WHITE PART OF EGG.\n\n\n
    </string>

    <string name="csesem1sub2">Mathematics-I(Calculus and Linear Algebra)</string>
    <string name="math_cse">\n\n\n


        <b><font fgcolor='#F700FF'>L:3 T:1 P:0 Credit:4</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>CONTENTS</font></b>\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 1:

     CALCULUS: (6 LECTURES)</font></b>\n\n\n

EVOLUTES AND INVOLUTES; EVALUATION OF DEFINITE AND IMPROPER INTEGRALS; BETA AND GAMMA FUNCTIONS AND THEIR PROPERTIES; APPLICATIONS OF DEFINITE INTEGRALS TO EVALUATE SURFACE AREAS AND VOLUMES OF REVOLUTIONS.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 2:

     CALCULUS: (6 LECTURES)</font></b>\n\n\n

ROLLES THEOREM, MEAN VALUE THEOREMS, TAYLORS AND MACLAURIN THEOREMS WITH REMAINDERS; INDETERMINATE FORMS AND L HOSPITALS RULE; MAΧΙΜΑ AND MINIMA.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 3:

     SEQUENCES AND SERIES: (10 LECTURES)</font></b>\n\n\n

CONVERGENCE OF SEQUENCE AND SERIES, TESTS FOR CONVERGENCE; POWER SERIES, TAYLORS SERIES, SERIES FOR EXPONENTIAL, TRIGONOMETRIC AND LOGARITHM FUNCTIONS; FOURIER SERIES: HALF RANGE SINE AND COSINE SERIES, PARSEVALS THEOREM.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 4:

     MULTIVARIABLE CALCULUS (DIFFERENTIATION): (8 LECTURES)</font></b>\n\n\n

LIMIT, CONTINUITY AND PARTIAL DERIVATIVES, DIRECTIONAL DERIVATIVES, TOTAL DERIVATIVE; TANGENT PLANE AND NORMAL LINE; ΜΑΧΙΜΑ, MINIMA AND SADDLE POINTS; METHOD OF LAGRANGE MULTIPLIERS; GRADIENT, CURL AND DIVERGENCE.\n\n\n

       <b><font fgcolor='#F700FF'>  MODULE 5:

           MATRICES (10 LECTURES)</font></b>\n\n\n

INVERSE AND RANK OF A MATRIX, RANK-NULLITY THEOREM; SYSTEM OF LINEAR EQUATIONS; SYMMETRIC, SKEW-SYMMETRIC AND ORTHOGONAL MATRICES; DETERMINANTS; EIGENVALUES AND EIGENVECTORS; DIAGONALIZATION OF MATRICES; CAYLEY-HAMILTON THEOREM, AND ORTHOGONAL TRANSFORMATION.\n\n\n

        <b><font fgcolor='#F700FF'>SUGGESTED TEXT/REFERENCE BOOKS</font>
        </b>
        \n\n\n

~ G.B. THOMAS AND R.L. FINNEY, CALCULUS AND ANALYTIC GEOMETRY, 9TH EDITION, PEARSON, REPRINT, 2002.\n\n\n

~ ERWIN KREYSZIG, ADVANCED ENGINEERING MATHEMATICS, 9TH EDITION, JOHN WILEY and SONS, 2006.\n\n\n

~ VEERARAJAN T., ENGINEERING MATHEMATICS FOR FIRST YEAR, TATA MCGRAW-HILL, NEW DELHI, 2008.\n\n\n

~ RAMANA B.V., HIGHER ENGINEERING MATHEMATICS, TATA MCGRAW HILL NEW DELHI, 11TH REPRINT, 2010.\n\n\n

~ D. POOLE, LINEAR ALGEBRA: A MODERN INTRODUCTION, 2ND EDITION, BROOKS/COLE, 2005.\n\n\n

~N.P. BALI AND MANISH GOYAL, A TEXT BOOK OF ENGINEERING MATHEMATICS, LAXMI PUBLICATIONS, REPRINT, 2008.\n\n\n

~B.S. GREWAL, HIGHER ENGINEERING MATHEMATICS, KHANNA PUBLISHERS, 36TH EDITION, 2010.\n\n\n

    </string>

    <string name="csesem1sub3">Programming For Problem Solving</string>
    <string name="ppscse">\n\n\nL:3 T:0 P:4 Credit:5\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 1: INTRODUCTION TO PROGRAMMING (6 LECTURES)</font></b>\n\n\n
- Components of a computer system\n\n\n
- Algorithms and their representation (Flowcharts/Pseudo code)\n\n\n
- From algorithms to programs (Source code, variables, memory)\n\n\n
- Run-time environment and storage classes\n\n\n
- Syntax and logical errors in compilation\n\n\n
- Object and executable code\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 2: OPERATORS (3 LECTURES)</font></b>\n\n\n
- Arithmetic, relational, logical, bitwise operators\n\n\n
- Operator precedence\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 3: CONDITIONAL BRANCHING AND LOOPS (5 LECTURES)</font></b>\n\n\n
- Writing and evaluating conditionals\n\n\n
- Branching and iteration (Loops)\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 4: ARRAYS (4 LECTURES)</font></b>\n\n\n
- Array declaration and initialization\n\n\n
- Bound checking arrays (1-D, 2-D)\n\n\n
- Character arrays and strings\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 5: BASIC ALGORITHMS (6 LECTURES)</font></b>\n\n\n
- Searching algorithms (Linear, Binary)\n\n\n
- Basic sorting algorithms (Bubble, Insertion, Selection)\n\n\n
- Finding roots of equations\n\n\n
- Notion of order of complexity through example programs\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 6: FUNCTION (4 LECTURES)</font></b>\n\n\n
- Introduction and writing functions\n\n\n
- Scope of variables in functions\n\n\n
- Parameter passing in functions (Call by value, Call by reference)\n\n\n
- Passing arrays to functions\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 7: RECURSION (5 LECTURES)</font></b>\n\n\n
- Recursion as a problem-solving technique\n\n\n
- Example programs: Factorial, Fibonacci series, Reverse a string, GCD, Ackerman function\n\n\n
- Quick sort or merge sort\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 8: STRUCTURE/UNION (3 LECTURES)</font></b>\n\n\n
- Structures and their elements\n\n\n
- Storage of structure elements\n\n\n
- Defining structures and arrays of structures\n\n\n
- Basic definition of union\n\n\n
- Comparison between structure and union with examples\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 9: POINTERS (5 LECTURES)</font></b>\n\n\n
- Idea of pointers and their definitions
- Use of pointers in self-referential structures
- Notion of linked lists
- Pointer to pointer, array, strings, function, structure\n\n\n

        <b><font fgcolor='#F700FF'>MODULE 10: FILE HANDLING</font></b>\n\n\n
- (To be covered if time permits or as part of the lab)\n\n


        <b><font fgcolor='#F700FF'>SUGGESTED TEXT BOOKS:</font></b>\n\n\n

~BYRON GOTTFRIED, SCHAUMS OUTLINE OF PROGRAMMING WITH C, MCGRAW-HILL

~E. BALAGURUSWAMY, PROGRAMMING IN ANSI C, TATA MCGRAW-HILL\n\n\n

        <b><font fgcolor='#F700FF'>SUGGESTED REFERENCE BOOKS</font></b>\n\n\n

~BRIAN W. KERNIGHAN AND DENNIS M. RITCHIE, THE C PROGRAMMING LANGUAGE, PRENTICE HALL OF INDIA

~ YASHWANT KANETKAR, LET US C, BPB PUBLICATION\n\n\n

        <b><font fgcolor='#F700FF'>THE STUDENT WILL LEARN</font></b>\n\n\n

~TO FORMULATE SIMPLE ALGORITHMS FOR ARITHMETIC AND LOGICAL PROBLEMS.\n\n\n

~TO TRANSLATE THE ALGORITHMS TO PROGRAMS (IN C LANGUAGE). ~TO TEST AND EXECUTE THE PROGRAMS AND CORRECT\n\n\n

        <b><font fgcolor='#F700FF'>SYNTAX AND LOGICAL ERRORS.</font></b>\n\n\n

~TO IMPLEMENT CONDITIONAL BRANCHING, ITERATION AND RECURSION.\n\n\n

~TO DECOMPOSE A PROBLEM INTO FUNCTIONS AND\n\n\n

SYNTHESIZE A COMPLETE PROGRAM USING DIVIDE AND CONQUER APPROACH.\n\n\n

~TO USE ARRAYS, POINTERS AND STRUCTURES TO FORMULATE ALGORITHMS AND PROGRAMS.\n\n\n

~TO APPLY PROGRAMMING TO SOLVE MATRIX ADDITION AND MULTIPLICATION PROBLEMS AND SEARCHING AND SORTING PROBLEMS.\n\n\n

~TO APPLY PROGRAMMING TO SOLVE SIMPLE NUMERICAL METHOD PROBLEMS, NAMELY ROT FINDING OF FUNCTION, DIFFERENTIATION OF FUNCTION AND SIMPLE INTEGRATION.\n\n\n


        <b><font fgcolor='#F700FF'> LABORATORY PROGRAMMING FOR PROBLEM SOLVING</font></b>\n\n\n

[THE LABORATORY SHOULD BE PRECEDED OR FOLLOWED BY A TUTORIAL TO EXPLAIN THE APPROACH OR ALGORITHM TO BE IMPLEMENTED FOR THE PROBLEM GIVEN.]\n\n\n

TUTORIAL 1: PROBLEM SOLVING USING COMPUTERS:\n\n\n

LAB1: FAMILIARIZATION WITH PROGRAMMING ENVIRONMENT\n\n\n

TUTORIAL 2: VARIABLE TYPES AND TYPE CONVERSIONS:\n\n\n

LAB 2: SIMPLE COMPUTATIONAL PROBLEMS USING ARITHMETIC EXPRESSIONS\n\n\n

TUTORIAL 3: BRANCHING AND LOGICAL EXPRESSIONS:\n\n\n

LAB 3: PROBLEMS INVOLVING IF-THEN-ELSE STRUCTURES\n\n\n

TUTORIAL 4: LOOPS, WHILE AND FOR LOOPS:\n\n\n

LAB 4: ITERATIVE PROBLEMS E.G., SUM OF SERIES\n\n\n

TUTORIAL 5: 1D ARRAYS: SEARCHING, SORTING:\n\n\n

LAB 5: 1D ARRAY MANIPULATION\n\n\n

TUTORIAL 6: 2D ARRAYS AND STRINGS\n\n\n

LAB 6: MATRIX PROBLEMS, STRING OPERATIONS\n\n\n

TUTORIAL 7: FUNCTIONS, CALL BY VALUE:\n\n\n

LAB 7: SIMPLE FUNCTIONS\n\n\n

TUTORIAL 8: NUMERICAL METHODS (ROOT FINDING, NUMERICAL DIFFERENTIATION, NUMERICAL INTEGRATION):\n\n\n

LAB 8: PROGRAMMING FOR SOLVING NUMERICAL METHODS PROBLEMS\n\n\n

TUTORIAL 9: RECURSION, STRUCTURE OF RECURSIVE CALLS\n\n\n

LAB 9: RECURSIVE FUNCTIONS\n\n\n

TUTORIAL 10: POINTERS, STRUCTURES AND DYNAMIC MEMORY ALLOCATION\n\n\n

        LAB 10: POINTERS AND STRUCTURES\n\n\n

TUTORIAL 11: FILE HANDLING:\n\n\n

LAB 11: FILE OPERATIONS\n\n\n</string>


    <string name="csesem1sub4">Workshop Manufacturing Practices</string>
    <string name="WMPcse">\n\n\n
        <b><font fgcolor='#F700FF'> L:1 T:0 P:4 Credit:3</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>LECTURES and VIDEOS: (10 HOURS) [L: 1; T: 0; P: 0 (1 CREDIT)]</font></b>\n\n\n

        <b>DETAILED CONTENTS:</b>

1. MANUFACTURING METHODS-CASTING, FORMING, MACHINING, JOINING, ADVANCED MANUFACTURING METHODS (3 LECTURES)\n\n\n

2. CNC MACHINING, ADDITIVE MANUFACTURING (1 LECTURE)\n\n\n

3. FITTING OPERATIONS and POWER TOOLS (1 LECTURE)\n\n\n

4. CARPENTRY (1 LECTURE)\n\n\n

5. PLASTIC MOULDING, GLASS CUTTING (1 LECTURE)\n\n\n

6. METAL CASTING (1 LECTURE)\n\n\n

7. WELDING (ARC WELDING and GAS WELDING), BRAZING, SOLDERING (2 LECTURE)\n\n\n

        <b><font fgcolor='#F700FF'>SUGGESTED TEXT/REFERENCE BOOKS:</font></b>\n\n\n

~HAJRA CHOUDHURY S.K., HAJRA CHOUDHURY A.K. AND NIRJHAR ROY S.K., ELEMENTS OF WORKSHOP TECHNOLOGY, VOL. I 2008 AND VOL. II 2010, MEDIA PROMOTERS AND PUBLISHERS PRIVATE LIMITED, MUMBAI.\n\n\n

~KALPAKJIAN S. AND STEVEN S. SCHMID,\n\n\n

MANUFACTURING ENGINEERING AND TECHNOLOGY, 4TH\n\n\n

EDITION, PEARSON EDUCATION INDIA EDITION, 2002. ~GOWRI P. HARIHARAN AND A. SURESH BABU,MANUFACTURING TECHNOLOGY-I PEARSON\n\n\n

EDUCATION, 2008. ~ROY A. LINDBERG, PROCESSES AND MATERIALS OF MANUFACTURE, 4TH EDITION, PRENTICE HALL INDIA, 1998.\n\n\n

~RAO P.N., MANUFACTURING TECHNOLOGY, VOL. I AND VOL. II, TATA MCGRAWHILL HOUSE, 2017.\n\n\n

        <b><font fgcolor='#F700FF'>COURSE OUTCOMES:</font></b>\n\n\n

~UPON COMPLETION OF THIS COURSE, THE STUDENTS WILL GAIN KNOWLEDGE OF THE DIFFERENT MANUFACTURING PROCESSES WHICH ARE COMMONLY EMPLOYED IN THE INDUSTRY, TO FABRICATE COMPONENTS USING DIFFERENT MATERIALS.\n\n\n

        <b><font fgcolor='#F700FF'> WORKSHOP PRACTICE: (60 HOURS) [L: 0; T: 0; P: 4 (2 CREDITS)]</font></b>\n\n\n

1. MACHINE SHOP (10 HOURS) AND FITTING SHOP (8 HOURS)\n\n\n

2. CARPENTRY (6 HOURS)\n\n\n

3. WELDING SHOP (8 HOURS) (ARC WELDING 4 HRS + GAS WELDING 4 HRS)\n\n\n

4. CASTING (8 HOURS) AND SMITHY (6 HOURS)\n\n\n

5. PLASTIC MOULDING and GLASS CUTTING (6 HOURS)\n\n\n

6. 3-D PRINTING OF DIFFERENT MODELS (8 HOURS)\n\n\n

EXAMINATIONS COULD INVOLVE THE ACTUAL FABRICATION OF SIMPLE COMPONENTS, UTILIZING ONE OR MORE OF THE TECHNIQUES COVERED ABOVE.\n\n\n</string>


    <string name="csesem1sub5">English</string>
    <string name="engcse">\n\n\n

        <b><font fgcolor='#F700FF'>L:2 T:0 P:2 Credit:3</font></b>\n\n\n

<b>DETAILED CONTENTS</b>\n\n\n

1.VOCABULARY BUILDING\n\n\n

A. THE CONCEPT OF WORD FORMATION\n\n\n

B. ROOT WORDS FROM FOREIGN LANGUAGES AND THEIR USE IN ENGLISH\n\n\n

C. ACQUAINTANCE WITH PREFIXES AND SUFFIXES FROM FOREIGN LANGUAGES IN ENGLISH TO FORM DERIVATIVES.\n\n\n

D. SYNONYMS, ANTONYMS, AND STANDARD ABBREVIATIONS.\n\n\n

E. AFFIXES, ACRONYMS\n\n\n

        <b><font fgcolor='#F700FF'>2.BASIC WRITING SKILLS</font></b>\n\n\n

A. SENTENCE STRUCTURES\n\n\n

B. USE OF PHRASES AND CLAUSES IN SENTENCES\n\n\n

C. IMPORTANCE OF PROPER PUNCTUATION\n\n\n

D. KINDS OF SENTENCES\n\n\n

E. USE OF TENSE, USE IN CONTEXT AND COHERENCE OF TENSE IN WRITING\n\n\n

F. USE OF VOICE-ACTIVE/PASSIVE IN SENTENCES\n\n\n

G. USE OF SPEECH-DIRECT AND INDIRECT SPEECH\n\n\n

H. FRAMING QUESTIONS-DIRECT, USING MODAL VERBS\n\n\n

        <b><font fgcolor='#F700FF'>3.IDENTIFYING COMMON ERRORS IN WRITING</font></b>\n\n\n

A. SUBJECT-VERB AGREEMENT\n\n\n

B. NOUN-PRONOUN AGREEMENT\n\n\n

C. MISPLACED MODIFIERS\n\n\n

D. ARTICLES\n\n\n

E. PREPOSITIONS\n\n\n

F. REDUNDANCIES\n\n\n

G. CLICHÉS\n\n\n

H. COMMON ENGLISH ERRORS\n\n\n
        <b><font fgcolor='#F700FF'>4.NATURE AND STYLE OF SENSIBLE WRITING</font></b>\n\n\n

A. DESCRIBING\n\n\n

B. DEFINING\n\n\n

C. CLASSIFYING\n\n\n

D. PROVIDING EXAMPLES OR EVIDENCE\n\n\n

E. WRITING INTRODUCTION AND CONCLUSION\n\n\n

F. ORGANISING PRINCIPLE OF PARAGRAPHS IN DOCUMENTS\n\n\n

G. ARGUMENT, DESCRIBING/ NARRATING/ PLANNING, DEFINING,CLASSIFYING\n\n\n

H. LEXICAL RESOURCES, USING SUITABLE LANGUAGE REGISTER\n\n\n

I. COHERENCE, WRITING INTRODUCTION, BODY AND CONCLUSION, TECHNIQUES FOR WRITING PRECISELY,GRAMMAR AND ACCURACY\n\n\n

        <b><font fgcolor='#F700FF'>5.WRITING PRACTICES</font></b>\n\n\n

A. COMPREHENSION\n\n\n

B. FORMAL LETTER WRITING/ APPLICATION/ REPORT\n\n\n

WRITING/ WRITING MINUTES OF MEETINGS\n\n\n

C. ESSAY WRITING\n\n\n

D. FORMAL EMAIL WRITING\n\n\n

E. RESUME/ CV WRITING, COVER LETTER,\n\n\n

F. STATEMENT OF PURPOSE\n\n\n

        <b><font fgcolor='#F700FF'>6.ORAL COMMUNICATION\n\n\n</font></b>

(THIS UNIT INVOLVES INTERACTIVE PRACTICE SESSIONS IN LANGUAGE LAB)\n\n\n

A. LISTENING COMPREHENSION\n\n\n

B. PRONUNCIATION, INTONATION, STRESS AND RHYTHM\n\n\n

C. COMMON EVERYDAY SITUATIONS: CONVERSATIONS AND DIALOGUES\n\n\n

D. COMMUNICATION AT WORKPLACE\n\n\n

E. INTERVIEWS\n\n\n

F. FORMAL PRESENTATIONS\n\n\n

G. ACQUAINTING STUDENTS WITH IPA SYMBOLS\n\n\n

H. PHONETICS (BASIC)\n\n\n

1. SOUNDS - VOWELS, CONSONANTS\n\n\n

J. CLEARING MOTHER TONGUE INFLUENCE\n\n\n

K. CLEARING REDUNDANCIES AND COMMON ERRORS RELATED TO INDIANISMS\n\n\n

L. GROUP DISCUSSION\n\n\n

M. EXPRESSING OPINIONS\n\n\n

N. COHERENCE AND FLUENCY IN SPEECH\n\n\n

        <b><font fgcolor='#F700FF'>7.READING SKILLS\n\n\n</font></b>

A. READING COMPREHENSION,\n\n\n

B. PARAGRAPH READING BASED ON PHONETIC SOUNDS/ INTONATION\n\n\n

        <b><font fgcolor='#F700FF'>   8.PROFESSIONAL SKILLS\n\n\n</font></b>

A. TEAM BUILDING\n\n\n\

B. SOFT SKILLS AND ETIQUETTES\n\n\n

        <b><font fgcolor='#F700FF'>9.ACQUAINTANCE WITH TECHNOLOGY-AIDED LANGUAGE LEARNING</font></b>\n\n\n

A. USE OF COMPUTER SOFTWARE (GRAMMARLY, GINGER…)\n\n\n

B. USE OF SMARTPHONE APPLICATIONS (DUOLINGO, BUSUU…)\n\n\n

        <b><font fgcolor='#F700FF'>10.ACTIVITIES\n\n\n</font></b>

A. NARRATIVE CHAIN\n\n\n

B. DESCRIBING/ NARRATING\n\n\n

C. WRITING ESSAYS IN RELAY\n\n\n

D. PEER/ GROUP ACTIVITIES\n\n\n

E. BRAINSTORMING VOCABULARY\n\n\n

F. CUE / FLASH CARDS FOR VOCABULARY\n\n\n

G. DEBATES\n\n\n

        <b><font fgcolor='#F700FF'>SUGGESTED READINGS:\n\n\n</font></b>

~PRACTICAL ENGLISH USAGE. MICHAEL SWAN. OUP. 1995.\n\n\n

~REMEDIAL ENGLISH GRAMMAR. F.T. WOOD.\n\n\n

MACMILLAN.2007\n\n\n

ON WRITING WELL. WILLIAM ZINSSER. HARPER\n\n\n

        <b><font fgcolor='#F700FF'>RESOURCE BOOK. 2001\n\n\n</font></b>

~STUDY WRITING. LIZ HAMP-LYONS AND BEN HEASLY. CAMBRIDGE UNIVERSITY PRESS. 2006.\n\n\n

~COMMUNICATION SKILLS. SANJAY KUMAR AND PUSHPLATA. OXFORD UNIVERSITY PRESS. 2011.\n\n\n\

~EXERCISES IN SPOKEN ENGLISH. PARTS. I-III. CIEFL, HYDERABAD. OXFORD UNIVERSITY PRESS\n\n\n</string>


    <string name="csesem2sub3">Mathematics-II(Probability and Statistics)</string>
    <string name="math_cse_2">\n\n\n

        <b><font fgcolor='#F700FF'>L:3 T:1 P:0 Credit:4</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>CONTENTS</font></b>\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 1:

     BASIC PROBABILITY (12 LECTURES)</font></b>\n\n\n

PROBABILITY SPACES, CONDITIONAL PROBABILITY, INDEPENDENCE; DISCRETE RANDOM VARIABLES, INDEPENDENT RANDOM VARIABLES, THE MULTINOMIAL DISTRIBUTION, POISSON APPROXIMATION TO THE BINOMIAL DISTRIBUTION, INFINITE SEQUENCES OF BERNOULLI TRIALS, SUMS OF INDEPENDENT RANDOM VARIABLES; EXPECTATION OF DISCRETE RANDOM VARIABLES, MOMENTS, VARIANCE OF A SUM, CORRELATION COEFFICIENT, CHEBYSHEVS INEQUALITY.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 2:

     CONTINUOUS PROBABILITY DISTRIBUTIONS (4 LECTURES)</font></b>\n\n\n

CONTINUOUS RANDOM VARIABLES AND THEIR PROPERTIES, DISTRIBUTION FUNCTIONS AND DENSITIES, NORMAL, EXPONENTIAL AND GAMMA DENSITIES.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 3:

     BIVARIATE DISTRIBUTIONS (4 LECTURES)</font></b>\n\n\n

BIVARIATE DISTRIBUTIONS AND THEIR PROPERTIES, DISTRIBUTION OF SUMS AND QUOTIENTS, CONDITIONAL DENSITIES, BAYES RULE.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 4:

     BASIC STATISTICS (8 LECTURES)</font></b>\n\n\n

MEASURES OF CENTRAL TENDENCY: MOMENTS, SKEWNESS AND KURTOSIS PROBABILITY DISTRIBUTIONS: BINOMIAL, POISSON AND NORMAL EVALUATION OF STATISTICAL PARAMETERS FOR THESE THREE DISTRIBUTIONS, CORRELATION AND REGRESSION - RANK CORRELATION.\n\n\n

        <b><font fgcolor='#F700FF'> MODULE 5:

            APPLIED STATISTICS (8 LECTURES)</font></b>\n\n\n

CURVE FITTING BY THE METHOD OF LEAST SQUARES- FITTING OF STRAIGHT LINES, SECOND DEGREE PARABOLAS AND MORE GENERAL CURVES. TEST OF SIGNIFICANCE: LARGE SAMPLE TEST FOR SINGLE PROPORTION, DIFFERENCE OF PROPORTIONS, SINGLE MEAN, DIFFERENCE OF MEANS AND DIFFERENCE OF STANDARD DEVIATIONS.\n\n\n

 <b><font fgcolor='#F700FF'>MODULE 6:

     SMALL SAMPLES (4 LECTURES)</font></b>\n\n\n

TEST FOR SINGLE MEAN, DIFFERENCE OF MEANS AND CORRELATION COEFFICIENTS, TEST FOR RATIO OF VARIANCES-CHI-SQUARE TEST FOR GOODNESS OF FIT AND INDEPENDENCE OF ATTRIBUTES.\n\n\n

        <b><font fgcolor='#F700FF'>TEXT/REFERENCES:</font></b>\n\n\n

~ E. KREYSZIG, ADVANCED ENGINEERING MATHEMATICS, JOHN WILEY and SONS, 2006. P. G. HOEL, S. C. PORT AND C. J. STONE, INTRODUCTION TO PROBABILITY THEORY, UNIVERSAL BOOK STALL, 2003. ~ S. ROSS, A FIRST COURSE IN PROBABILITY, PEARSON EDUCATION INDIA, 2002. ~W. FELLER, AN INTRODUCTION TO PROBABILITY THEORY AND ITS APPLICATIONS, VOL. 1, WILEY, 1968. ~ N.P. BALI AND M. GOYAL, A TEXT BOOK OF ENGINEERING MATHEMATICS, LAXMI PUBLICATIONS, 2010. ~ B.S. GREWAL, HIGHER ENGINEERING MATHEMATICS, KHANNA PUBLISHERS, 2000. ~T. VEERARAJAN, ENGINEERING MATHEMATICS, TATA MCGRAW-HILL, NEW DELHI, 2010\n\n\n
    </string>

    <string name="csesem2sub4">Physics(Semiconductor)</string>
<string name="physce2">\n\n\n


    <b><font fgcolor='#F700FF'>L:3 T:1 P:3 Credit:5.5</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>PREREQUISTE: SEMICONDUCTOR PHYSICS DETAIL CONTENT</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>MODULE 1: SEMICONDUCTORS (08 LECTURES)</font></b>\n\n\n

INTRINSIC AND EXTRINSIC SEMICONDUCTORS, DEPENDENCE OF FERMI LEVEL ON CARRIERCONCENTRATION AND TEMPERATURE (EQUILIBRIUM CARRIER STATISTICS), CARRIER GENERATION AND RECOMBINATION, CARRIER TRANSPORT: DIFFUSION AND DRIFT, P-NJUNCTION.\n\n\n

    <b><font fgcolor='#F700FF'>MODULE 2: ELECTRONIC MATERIALS (8 LECTURES)</font></b>\n\n\n

FREE ELECTRON THEORY, DENSITY OF STATES AND ENERGY BAND DIAGRAMS, KRONIG- PENNY MODEL (TO INTRODUCE ORIGIN OF BAND GAP), ENERGY BANDS IN SOLIDS, E-K DIAGRAM, DIRECT AND INDIRECT BANDGAPS, TYPES OF ELECTRONICS MATERIALS: METATLS, SEMICONDUCTORS, AND INSULATIORS, DENSITY OF STATES, OCCUPATION PROBABILITY, FERMI LEVEL EFFECTIVE MASS, PHONONS.\n\n\n

    <b><font fgcolor='#F700FF'>MODULE 3: SEMICONDUCTOR LIGHT EMITTING DIODES (LEDS) (6 LECTURES)</font></b>\n\n\n

RATE EQUATIOINS FOR CARRIER DENSITY, RADIATIVE AND NON-RADIATIVE RECOMBINATION MECHANISMS IN SEMICONDUCTORS, LED:DEVICE STRUCTURE, MATERIALS, CHARRACTERISTICS, AND FIGURES OF MERIT.\n\n\n

    <b><font fgcolor='#F700FF'>MODULE 4: SEMICONDUCTOR LASERS (5 LECTURES)</font></b>\n\n\n

REVIEW OF LASER PHYSICS; RATE OF EQUATIONS FOR CARRIER- AND PHOTON-DENSITY, AND THEIR STEADY STATE SOLUTION, LASER DYNAMICS, RELAXATION OSCILLATIONS, INPUT-OUTPUT CHARACTERISTICS OF LASERS. SEMICONDUCTIOR LASER: STRUCTURE, MATERIALS\n\n\n


    <b><font fgcolor='#F700FF'>MODULE 5: PHOTODETECTORS (6 LECTURES)</font></b>\n\n\n

TYPES OF SEMICONDUCTOR PHOTODETECTORS-P-N JUNCTION, PIN AND AVALANCHE AND THEIR STRUCTURE, MATERIALS, WORKING PRINCIPLE, AND CHARACTERISTICS.

    <b><font fgcolor='#F700FF'>MODULE 6: INTRODUCTION TO QUANTUM MECHANICS (6 LECTURES)</font></b>\n\n\n

WAVE PARTICLE DUALITY, COMPTON EFFECT AND PHOTOELECTRIC EFFECT, UNCERTAINTY PRINCIPLE, PROBABILITY CURRENT DENSITY, EXPECTATION VALUES, FREE-PARTICLE WAVE FUNCTION AND WAVE-PACKETS, TIME-DEPENDENTS AND TIME INDEPENDENT SCHRODINGER EQUATION FOR WAVE FUNCTION.

    <b><font fgcolor='#F700FF'>SUGGESTED TEXT/REFERENCE BOOKS</font></b>\n\n\n

~J. SINGH, SEMICONDUCTOR

OPTOELECTRONICS :PHYSICS AND TECHNOLOGY, MCGRAW-HILL INC. (1995).\n\n\n

~B. E. A. SALEH AND M.C. TEICH, FUNDAMENTALS OF PHOTONICS, JOHN WILEY &amp; SONS,\n\n\n

~S. M. SZE, SEMICONDUCTOR DEVICES: PHYSICS AND TECHNOLOGY, WILEY (2008).\n\n\n

~ YARIV AND P. YEH, PHOTONICS: OPTICAL ELECTRONICS IN MODERN COMMUNICATIONS, OXFORD UNIVERSITY PRESS, NEW YORK (2007),\n\n\n

~P. BHATTACHARYA, SEMICONDUCTIOR OPTOELECTRONIC DEVICES, PRENTICE HALL OF INDIA

(1997)\n\n\n

    <b><font fgcolor='#F700FF'>List of Experiments:</font></b>\n\n\n

1. To verify the inverse square law of radiation using Photoelectric effect.\n\n\n

2. To determine the value of Planck\'s constant and

photoelectric work function of the material of the cathode

using photoelectric cell. \n\n\n

    3. To verify the existence of Bohr\'s energy levels with Frank-Hertz apparatus.\n\n\n

4. To study the V-I characteristics of semiconductor diode.\n\n\n

5. To find the band gap of the semiconductor material using diode in reverse bias.\n\n\n

6. To study the common base and common emitter characteristics of PNP/NPN junction transistor.\n\n\n

7. To study the characteristics of metal-oxide-field-effect transistor.\n\n\n
</string>

    <string name="csesem3sub1">Analog Electronics Circuits</string>
    <string name="ACE_cse">\n\n\n



<b><font fgcolor='#F700FF'>3L:0T:

    4P 5 Credits</font>
</b>\n\n\n

        <b><font fgcolor='#F700FF'>Objectives of the course:</font></b>\n\n\n

1. To learn the fundamentals of analog electronic circuits.\n\n\n

2. To design, construct and debug the analog electronic circuits. v 3. Principles of operation, terminal characteristics, and equivalent circuit models for diodes, transistors, and op-amps.\n\n\n

4. Differential amplifiers, frequency response of cascaded amplifiers and gain-bandwidth considerations.\n\n\n

5. Linear and nonlinear applications of op-amp.\n\n\n

        <b><font fgcolor='#F700FF'>Module 1 Lectures: 4 hrs.</font></b>\n\n\n

Diode circuits: P-N junction diode, I-V characteristics of a diode; review of half-wave and fullwave rectifiers, Zener diodes, clamping and clipping circuits.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lectures: 8 hrs.</font></b>\n\n\n

BJT circuits: Structure and I-V characteristics of a BJT; BJT as a switch. BJT as an amplifier: small-signal model, biasing circuits, current mirror, common-emitter, common-base and commoncollector amplifiers; Small signal equivalent circuits, high-frequency equivalent circuits.\n\n\n

        <b><font fgcolor='#F700FF'>Module 3 Lectures: 8 hrs.</font></b>\n\n\n

MOSFET circuits: MOSFET structure and I-V characteristics. MOSFET as a switch. MOSFET as an amplifier: small-signal model and biasing circuits, common-source, common-gate and commondrain amplifiers; small signal equivalent circuits - gain, input and output impedances, transconductance, high frequency equivalent circuit.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lectures: 8 hrs.</font></b>\n\n\n

Differential, multi-stage and operational amplifiers: Differential amplifier, power amplifier; direct coupled multi-stage amplifier, internal structure of an operational amplifier, ideal op-amp, nonidealities in an op-amp (Output offset voltage, input bias current, input offset current, slew rate, gain bandwidth product)\n\n\n

        <b><font fgcolor='#F700FF'>Module 5 Lectures: 8 hrs.</font></b>\n\n\n

Linear applications of op-amp: Idealized analysis of op-amp circuits. Inverting and non-inverting amplifier, differential amplifier, instrumentation amplifier, integrator, active filter, P, PI and PID controllers and lead/lag compensator using an op-amp, voltage regulator, oscillators (Wein bridge and phase shift). Analog to Digital Conversion.\n\n\n

        <b><font fgcolor='#F700FF'>  Module 6 Lectures: 4 hrs.</font></b>\n\n\n

Nonlinear applications of op-amp: Hysteretic Comparator, Zero Crossing Detector, Square-wave and triangular-wave generators. Precision rectifier, peak detector, Monoshot.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested Books:</font>
        </b>
        \n\n\n

1. A S Sedra and K. C. Smith, "Microelectronic Circuits", New York, Oxford University Press, 1998.\n\n\n

2. J. V. Wait, L. P. Huelsman and G. A. Korn, "Introduction to Operational Amplifier theory and applications", McGraw Hill U.. S., 1992.\n\n\n

3. J. Millman and A. Grabel, "Microelectronics", McGraw Hill Education, 1988.\n\n\n

4. P. Horowitz and W. Hill, "The Art of Electronics", Cambridge University Press, 1989. 5. P.R. Gray, R.G. Meyer and S. Lewis, "Analysis and Design of

Analog Integrated Circuits", John Wiley &amp; Sons, 2001.\n\n\n

        <b><font fgcolor='#F700FF'>Course Outcomes</font></b>\n\n\n

        <b>After the completion of course, students can able to able to: \n\n\n</b>
            1. Understand the characteristics of transistors.\n\n\n

2. Design and analyze various rectifier and amplifier circuits.\n\n\n

3. Design sinusoidal and non-sinusoidal oscillators.\n\n\n

4. Understand the functioning of OP-AMP and design OP-AMP based circuits.\n\n\n
    </string>


    <string name="csesem3sub2">Data Structure Alogorathim</string>
    <string name="DSA">\n\n\n

        <b><font fgcolor='#F700FF'>  3L:0T: 4P 5 credits</font></b>\n\n\n

        <b>Pre-requisites ESC 201 Programming for Problem Solving</b>\n\n\n

        <b><font fgcolor='#F700FF'>Objectives of the course:</font>
        </b>
        \n\n\n

1. To impart the basic concepts of data structures and algorithms.\n\n\n

2. To understand concepts about searching and sorting techniques\n\n\n

3. To understand basic concepts about stacks, queues, lists, trees and graphs.\n\n\n

4. To enable them to write algorithms for solving problems with the help of fundamental data structures\n\n\n

        <b><font fgcolor='#F700FF'>Detailed contents:</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>Module 1:</font></b>\n\n\n

Introduction: Basic Terminologies: Elementary Data Organizations, Data Structure Operations: insertion, deletion, traversal etc.; Analysis of an Algorithm, Asymptotic Notations, Time-Space trade off. Searching: Linear Search and Binary Search Techniques and their complexity analysis.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2:</font></b>\n\n\n

Stacks and Queues: ADT Stack and its operations: Algorithms and their complexity analysis, Applications of Stacks: Expression Conversion and evaluation - corresponding algorithms and complexity analysis. ADT queue, Types of Queue: Simple Queue, Circular Queue, Priority Queue; Operations on each types of Queues: Algorithms and their analysis.\n\n\n

        <b><font fgcolor='#F700FF'>Module 3:</font></b>\n\n\n

Linked Lists: Singly linked lists: Representation in memory, Algorithms of several operations: Traversing, Searching, Insertion into, Deletion from linked list; Linked representation of Stack and Queue, Header nodes, Doubly linked list: operations on it and algorithmic analysis; Circular Linked Lists: all operations their algorithms and the complexity analysis.\n\n

        Trees: Basic Tree Terminologies, Different types of Trees: Binary Tree, Threaded Binary Tree, Binary Search Tree, AVL Tree; Tree operations on each of the trees and their algorithms with complexity analysis. Applications of Binary Trees. B Tree, B+ Tree: definitions, algorithms and analysis.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4:</font></b>\n\n\n

Sorting and Hashing: Objective and properties of different sorting algorithms: Selection Sort, Bubble Sort, Insertion Sort, Quick Sort, Merge Sort, Heap Sort; Performance and Comparison among all the methods, Hashing. Graph: Basic Terminologies and Representations, Graph search and traversal algorithms and complexity analysis.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested books:</font>
        </b>
        \n\n\n

1. "Fundamentals of Data Structures", Illustrated Edition by Ellis Horowitz, Sartaj Sahni, Computer Science Press.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested reference books:</font>
        </b>
        \n\n\n

1. Algorithms, Data Structures, and Problem Solving with C+ +", Illustrated Edition by Mark Allen Weiss, Addison-Wesley Publishing Company\n\n\n

2. "How to Solve it by Computer", 2nd Impression by R.G. Dromey, Pearson Education. Course outcomes\n\n\n

1. For a given algorithm student will able to analyze the algorithms to determine the time and computation complexity and justify the correctness.\n\n\n

2. For a given Search problem (Linear Search and Binary Search) student will able to implement it.\n\n\n

3. For a given problem of Stacks, Queues and linked list student will able to implement it and analyze the same to determine the time and computation complexity.\n\n\n

4. Student will able to write an algorithm Selection Sort, Bubble Sort, Insertion Sort, Quick Sort, Merge Sort, Heap Sort and compare their performance in term of Space and Time complexity.\n\n\n

5. Student will able to implement Graph search and traversal algorithms and determine the time and computation complexity.\n\n\n
    </string>


    <string name="csesem3sub3">Object Oriented Programming Using C++</string>
<string name="oops">\n\n\n

<b><font fgcolor='#F700FF'>  3L:0T:

    4P 5 credits</font></b>\n\n\n

    <b>Objectives of the course:</b>\n\n\n

1. To impart the basic concepts of Object Oriented Programming.\n\n\n

2. To understand concepts about Classes and Data Abstraction\n\n\n

3. To understand basic concepts about Inheritance.\n\n\n

4. To enable them to write algorithms for solving problems using object oriented approach.\n\n\n

    <b><font fgcolor='#F700FF'>Detailed contents:</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture: 3 hrs.</font></b>\n\n\n

Introduction to C++: Object Oriented Technology, Advantages of OOP, Input-output in C++, Tokens, Keywords, Identifiers, Data Types C++, Derives data types. The void data type, Type Modifiers, Typecasting, Constant, Operator, Precedence of Operators, Strings.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture: 6 hrs.</font></b>\n\n\n

Control Structures and Functions: Decision making statements like if-else, Nested if-else, goto, break, continue, switch case, Loop statement like for loop, nested for loop, while loop, do-while loop. Parts of Function, User- defined Functions, Value- Returning Functions, void Functions, Value Parameters, Function overloading, Virtual Functions.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture: 12 hrs.</font></b>\n\n\n

Classes and Data Abstraction: Structure in C++, Class, Build-in Operations on Classes, Assignment Operator and Classes, Class Scope, Reference parameters and Class Objects (Variables), Member functions, Accessor and Mutator Functions, Constructors, default Constructor, Destructors.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture: 8 hrs.</font></b>\n\n\n

Overloading, Templates and Inheritance: Operator Overloading, Function Overloading, Function Templates, Class Templates. Single and Multiple Inheritance, virtual Base class, Abstract Class, Pointer and Inheritance, Overloading Member Function.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture: 11 hrs.</font></b>\n\n\n

Pointers, Arrays and Exception Handling: Void Pointers, Pointer to Class, Pointer to Object, Void Pointer, Arrays. The keywords try, throw and catch. Creating own Exception Classes, Exception Handling Techniques (Terminate the Program, Fix the Error and Continue, Log the Error and Continue), Stack Unwinding.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font></b>
    \n\n\n

1. Thinking in C++, Volume 1 &amp; 2 by Bruce Eckel, Chuck Allison, Pearson Education\n\n\n

2. Mastering C++, 1/e by Venugopal, Tata McGraw Hill.\n\n\n

3. Object Oriented Programming with C++, 3/e by E.

Balaguruswamy, Tata McGraw Hill.\n\n\n

4. Starting Out with Object Oriented Programming in C++, by Tony Gaddis, Wiley India.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested Reference Books:</font>
    </b>\n\n\n

1. The C++ Programming language 3/e by Bjarne Stroustrup, Pearson Education.\n\n\n

2. C++, How to Programme, 4e, by Deitel, Pearson Education.\n\n\n

3. Big C++ by Cay Horstmann, Wiley India.\n\n\n

4. C++ Primer, 3e by Stanley B. Lippmann, JoseeLajoie, Pearson Education.\n\n\n

5. C++ and Object Oriented Programming Paradigm, 2e by Debasish Jana, PHI.\n\n\n

6. Programming with C++, 2/e by Ravichandran, Tata McGraw Hill\n\n\n

7. C++ Programming Black Book by Steven Holzner, Dreamtech Press.\n\n\n

    <b><font fgcolor='#F700FF'>Course outcomes</font></b>\n\n\n

    <b>After the completion of course, students can able to able to:</b>
    \n\n\n

1. Understand the concepts of Class, Object, Inheritance and Polymorphism.\n\n\n

2. Apply overload operators in C++\n\n\n

3. Understand the difference between function overloading and function overriding\n\n\n

4. Incorporate exception handling in object-oriented programs\n\n\n

5. Able to use template classes.\n\n\n

6. Able to write object-oriented programs of moderate complexity in C++\n\n\n
</string>



    <string name="csesem3sub4">Technical Writing</string>
<string name="TWcse">\n\n\n

  <b><font fgcolor='#F700FF'>  3L:OT:

      OP 3 credits</font></b>\n\n\n

    <b>Objectives of the course:</b>\n\n\n

1. To understand the variety of structure of technical documents\n\n\n

2. To convey clearly, cogently and correctly, through written media, the technical aspects of a practice to audiences.\n\n\n

3. To recognize and use of the verbal and technical elements necessary for the successful practice of scientific and technical communication \n\n\n
    4. To work collaboratively and individually to research, to analyze, and to write about, public debates regarding the conduct of science and technologyDetail contents\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Introduction: Fundamentals of Technical Writing: Need for Clear and Concise Technical Writing, Attributes of Technical Writing, Types of Technical Writing, Benefits of Technical Writing, Technical, Managerial and General Readers, Expressing versus Impressing, Correct use of Noun, Pronoun, Verb, Adjective, Adverbs, Tense and Punctuation.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Performing Technical Studies: Types of Technical Studies, General Methodology- Proposing a Project, Gathering Background Information, Designing Test Plans, Performing Experiments, Reporting Results. Writing Strategy: Analysis of Readers, Scope of Writing, Purpose and Objective. Document Options: Document Hierarchy, Report Types and Selection. Criteria for Good Technical Writing: Technical Content, Presentation, Language Skills. Writing Style: Elements of Style, Examples of Writing Styles, Recommended Style, Learn to Prepare Effective Illustrations\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture 10 hrs.</font></b>\n\n\n

Formal Reports: The Outline and Introduction (Outline, Title, Front Matter, Writing the Introduction), Writing the Body (Writing a Procedure, Describing Machines/Processes, Writing Test Results, Writing the Discussion Section), Closure (Conclusions, Recommendations, References, Abstract, Back Matter, Report Distribution, Saving Reports). Informal Reports: Elements of an Informal Report, Investigation Reports, Service Work, Action Letters and Proposals. Typical Memo Reports.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 10 hrs.</font></b>\n\n\n

Review and Editing: Types of Review and Edit, Review and Editing Methodology, Examples of Reviews. Oral Presentations: Types of Oral Presentations, Preparation, Visual Aids, Impediments to Technical Writing, Maintaining Writing Skills, Measuring Report Results.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font>
    </b>\n\n\n

1. "Engineers' Guide to Technical Writing", Kenneth G. Budinski, ASM International.\n\n\n

2. "Handbook for Technical Writing", James H. Shelton, NTC Contemporary Press3. "The Technical Writer's Handbook: Writing With Style and Clarity", Matt Young, University Science Books\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. "A Guide to Technical Writing", T. A. Rickard, Franklin Classics.\n\n\n

2. "Technical Writing", S. Jayprakash, Himalaya Publishing House Pvt. Ltd.\n\n\n

3. "Technical Writing", O. N. Pandey.\n\n\n
    <b><font fgcolor='#F700FF'>Course outcomes</font>
    </b>\n\n\n

1. Student should able to demonstrate improved competence in Standard Written English, including grammar, sentence and paragraph structure, coherence, and document design (including the use of the visual), and use this knowledge to revise texts.\n\n\n

2. Student should identify and practice the stages required

to produce competent, professional writing through planning,

drafting, revising, and editing.\n\n\n

3. It determine and implement the appropriate methods for each technical writing task.\n\n\n

4. Students learn to practice the ethical use of sources and the conventions of citation appropriate to each genre.\n\n\n
</string>

    <string name="csesem3sub5">Mathematics-III(Differential Calculus)</string>
    <string name="M3">\n\n\n
      <b><font fgcolor='#F700FF'>  2L:0T:

          OP 2 credits</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>Detailed contents:</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>Module 1 Lecture: 6 hrs.</font></b>\n\n\n

Successive Differentiation, Leibnitz\'s Theorem. Limit, Continuity and Differentiability of function for one variable.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lecture: 8 hrs.</font></b>\n\n\n

Limit, Continuity and Differentiability of function for several variables. Partial Derivatives, Euler\'s Theorem for Homogeneous functions, Total derivatives, Change of Variables. Maxima and Minima of Several Variables. Methods of Lagrange Multipliers. Taylor\'s and Maclaurin\'s Theorem withremainders of several variables.\n\n\n

        <b><font fgcolor='#F700FF'>Module 3 Lecture: 8 hrs.</font></b>\n\n\n

Vector Calculus: Gradient, Divergence and Curl of a Vector and their Physical Interpretations, Vector Identities. Directional Derivatives. Line, Surface and Volume integrals, Application of Green\'s, Stokes and Gauss Divergence Theorem (Without Proof).\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lecture: 6 hrs.</font></b>\n\n\n

First Order Ordinary Differential Equations: Exact, Linear and Bernoulli\'s Equations, Euler\'s Equations, Equations not of First Degree: Equations Solvable for P, Equations Solvable for Y, Equations Solvable for X and Clairaut\'s Type.\n\n\n

        <b><font fgcolor='#F700FF'>Module 5 Lecture: 8 hrs.</font></b>\n\n\n

Ordinary Differential Equations of Higher Orders: Second Order Linear Differential Equations with Variable Coefficients, Method of Variation of Parameters, Cauchy-Euler Equation; Power Series Solutions; Legendre Polynomials, Bessel Functions of the First Kind and their properties.\n\n\n

        <b><font fgcolor='#F700FF'>Module 6 Lecture: 6 hrs.</font></b>\n\n\n

Partial Differential Equations - First Order: First Order Partial Differential Equations, Solutions of First Order Linear and Non-Linear PDEs.\n\n\n</string>


   <string name="csesem4sub1">Discrete Mathematics</string>
<string name="DMaths">\n\n\n

    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

    <b>Throughout the course, students will be expected to demonstrate their understanding of Discrete Mathematics by being able to do each of the following:</b>
    \n\n\n

1. Use mathematically correct terminology and notation.\n\n\n

2. Construct correct direct and indirect proofs.\n\n\n

3. Use division into cases in a proof.\n\n\n

4. Use counter examples.\n\n\n

5. Apply logical reasoning to solve a variety of problems.\n\n\n
    <b><font fgcolor='#F700FF'>Detailed contents:\n\n\n</font></b>

    <b><font fgcolor='#F700FF'>Module 1 Lecture 6 hrs.</font></b>\n\n\n

Sets, Relation and Function: Operations and Laws of Sets, Cartesian Products, Binary Relation, Partial Ordering Relation, Equivalence Relation, Image of a Set, Sum and Product of Functions, Bijective functions, Inverse and Composite Function, Size of a Set, Finite and infinite Sets, Countable and uncountable Sets, Cantor\'s diagonal argument and The Power Set theorem, Schroeder-Bernstein theorem.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 8 hrs.</font></b>\n\n\n

Principles of Mathematical Induction: The Well-Ordering Principle, Recursive definition, The Division algorithm: Prime Numbers, The Greatest Common Divisor: Euclidean Algorithm, The Fundamental Theorem of Arithmetic. Basic counting techniques-inclusion and exclusion, pigeon-hole principle, permutation and combination.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture 8 hrs.</font></b>\n\n\n

Propositional Logic: Syntax, Semantics, Validity and Satisfiability, Basic Connectives and Truth Tables, Logical Equivalence: The Laws of Logic, Logical Implication, Rules of Inference, The use of Quantifiers. Proof Techniques: Some Terminology, Proof Methods and Strategies, Forward Proof, Proof by Contradiction, Proof by Contraposition, Proof of Necessity and Sufficiency.\n\n\n

    <b><font fgcolor='#F700FF'> Module 4 Lecture 8 hrs.</font></b>\n\n\n

Algebraic Structures and Morphism: Algebraic Structures with one Binary Operation, Semi Groups, Monoids, Groups, Congruence Relation and Quotient Structures, Free and Cyclic Monoids and Groups, Permutation Groups, Substructures, Normal Subgroups, Algebraic Structures with two Binary Operation, Rings, Integral Domain and Fields. Boolean Algebra and Boolean Ring, Identities of Boolean Algebra, Duality, Representation of Boolean Function, Disjunctive and Conjunctive Normal Form\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture 10 hrs.</font></b>\n\n\n

Graphs and Trees: Graphs and their properties, Degree,

Connectivity, Path, Cycle, Sub Graph, Isomorphism, Eulerian and Hamiltonian Walks, Graph Coloring, Coloring maps and Planar Graphs, Coloring Vertices, Coloring Edges, List Coloring, Perfect Graph, definition properties and Example, rooted trees, trees and sorting, weighted trees and prefix codes, Biconnected component and Articulation Points, Shortest distances.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font>
    </b>
    \n\n\n

1. Kenneth H. Rosen, Discrete Mathematics and its Applications, Tata McGraw-Hill\n\n\n

2. Susanna S. Epp, Discrete Mathematics with Applications, 4th edition, Wadsworth Publishing Co.Inc.\n\n\n

3. C L Liu and DP Mohapatra, Elements of Discrete Mathematics A Computer Oriented Approach, 3rd Edition by, Tata McGraw-Hill.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. J.P. Tremblay and R. Manohar, Discrete Mathematical Structure and It\'s Application to Computer Science", TMGEdition, TataMcgraw-Hill\n\n\n

2. Norman L. Biggs, Discrete Mathematics, 2nd Edition, Oxford University Press. Schaum's Outlines Series, Seymour Lipschutz, MarcLipson,\n\n\n

3. Discrete Mathematics, Tata McGraw-Hill\n\n\n

    <b><font fgcolor='#F700FF'> Course Outcomes</font></b>\n\n\n

1. For a given logic sentence express it in terms of predicates, quantifiers, and logical connectives.\n\n\n

2. For a given a problem, derive the solution using deductive logic and prove the solution based on logical inference.\n\n\n

3. For a given a mathematical problem, classify its algebraic structure\n\n\n

4. Evaluate Boolean functions and simplify expressions using the properties of Boolean algebra\n\n\n

5. Develop the given problem as graph networks and solve with techniques of graph theory.\n\n\n

</string>

    <string name="csesem4sub2">Computer Organisation &amp; Architecture</string>
    <string name="COA">\n\n\n

        <b><font fgcolor='#F700FF'> Objectives of the course:</font></b>\n\n\n

        <b>To expose the students to the following:</b>\n\n\n

1. How Computer Systems work &amp; the basic principles\n\n\n

2. Instruction Level Architecture and Instruction Execution\n\n\n

3. The current state of art in memory system design\n\n\n

4. How I/O devices are accessed and its principles.\n\n\n

5. To provide the knowledge on Instruction Level Parallelism\n\n\n

6. To impart the knowledge on microprogramming\n\n\n

7. Concepts of advanced pipelining techniques.\n\n\n

        <b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Functional blocks of a computer: CPU, memory, input-output subsystems, control unit. Instruction set architecture of a CPU-registers, instruction execution cycle, RTL interpretation of instructions, addressing modes, instruction set. Case study instruction sets of some common CPUs. Data representation: signed number representation, fixed and floating point representations, character representation. Computer arithmetic - integer addition and subtraction, ripple carry adder, carry look-ahead adder, etc. multiplication - shift-and-add, Booth multiplier, carry save multiplier, etc. Division restoring and non-restoring techniques, floating point arithmetic.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lecture 14 hrs.</font></b>\n\n\n

Introduction to x86 architecture. CPU control unit design: hardwired and micro-programmed design approaches, Case study design of a simple hypothetical CPU. Memory system design: semiconductor memory technologies, memory organization. Peripheral devices and their characteristics: Input-output subsystems, I/O device interface, I/O transfers-program controlled, interrupt driven and DMA, privileged and non-privileged instructions, software interrupts and exceptions. Programs and processes-role of interrupts in process state transitions, I/O device interfaces SCII, USB.\n\n\n

        <b><font fgcolor='#F700FF'> Module 3 Lecture 10 hrs.</font></b>\n\n\n

Pipelining: Basic concepts of pipelining, throughput and speedup, pipeline hazards. Parallel Processors: Introduction to parallel processors, Concurrent access to memory and cache coherency.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lecture 6 hrs.</font></b>\n\n\n

Memory organization: Memory interleaving, concept of hierarchical memory organization, cache memory, cache size vs. Block size, mapping functions, replacement algorithms, write policies.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested books:</font></b>\n\n\n

1. "Computer Organization and Design: The Hardware/ Software Interface", 5th Edition by David A. Patterson and John L. Hennessy, Elsevier.\n\n\n

2. "Computer Organization and Embedded Systems", 6th Edition by Carl Hamacher, McGraw Hill Higher Education.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. "Computer Architecture and Organization", 3rd Edition by John P. Hayes, WCB/McGraw-Hill\n\n\n

2. "Computer Organization and Architecture: Designing for Performance", 10th Edition by William Stallings, Pearson Education.\n\n\n

3. "Computer System Design and Architecture", 2nd Edition by Vincent P. Heuring and Harry F. Jordan, Pearson Education.\n\n\n

        <b><font fgcolor='#F700FF'>Course outcomes:</font></b>\n\n\n

1. Draw the functional block diagram of a single bus architecture of a computer and describe the function of the instruction execution cycle, RTL interpretation of instructions, addressing modes, instruction set.\n\n\n

        2. Write assembly language program for specified microprocessor for computing 16 bit multiplication, division and I/O device interface (ADC, Control circuit, serial port communication).\n\n\n

3. Write a flowchart for Concurrent access to memory and cache coherency in Parallel Processors and describe the process.\n\n\n

4. Given a CPU organization and instruction, design a memory module and analyze its operation by interfacing with the CPU.\n\n\n

5. Given a CPU organization, assess its performance, and apply design techniques to enhance performance using pipelining, parallelism and RISC methodology\n\n\n
    </string>

    <string name="csesem4sub3">Operating System</string>
<string name="OS">\n\n\n

    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

1. To learn the fundamentals of Operating Systems.\n\n\n

2. To learn the mechanisms of OS to handle processes and threads and their communication\n\n\n

3. To learn the mechanisms involved in memory management in contemporary OS\n\n\n

4. To gain knowledge on distributed operating system concepts that includes architecture, mutual exclusion algorithms, deadlock detection algorithms and agreement protocols\n\n\n

5. To know the components and management aspects of concurrency management\n\n\n

6. To learn to implement simple OS mechanisms\n\n\n

    <b><font fgcolor='#F700FF'>Detailed Contents</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture 4 hrs.</font></b>\n\n\n

Introduction: Concept of Operating Systems, Generations of Operating systems, Types of Operating Systems, OS Services, System Calls, Structure of an OS-Layered, Monolithic, Microkernel Operating Systems, Concept of Virtual Machine. Case study on UNIX and WINDOWS\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Processes: Definition, Process Relationship, Different states of a Process, Process State transitions, Process Control Block (PCB), Context switching. Thread: Definition, Various states, Benefits of threads, Types of threads, Concept of multithreads Process Scheduling: Foundation and Scheduling objectives, Types of Schedulers, Scheduling criteria: CPU utilization, Throughput, Turnaround Time, Waiting Time, Response Time; Scheduling algorithms: Pre-emptive and Non pre-emptive, FCFS, SJF, RR; Multiprocessor scheduling: Real Time scheduling: RM and EDF.\n\n\n

    <b><font fgcolor='#F700FF'>  Module 3 Lecture 6 hrs.</font></b>\n\n\n

Inter-process Communication: Critical Section, Race Conditions, Mutual Exclusion, Hardware Solution, Strict Alternation, Peterson\'s Solution, The Producer - Consumer Problem, Semaphores, Event Counters, Monitors, Message Passing, Shared Memory, Classical IPC Problems: Reader\'s &amp; Writer Problem, Dinning Philosopher Problem etc.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 4 hrs.</font></b>\n\n\n

Deadlocks: Definition, Necessary and sufficient conditions for Deadlock, Deadlock Prevention, and Deadlock Avoidance: Banker\'s algorithm, Deadlock detection and Recovery.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture 9 hrs.</font></b>\n\n\n

Memory Management: Basic concept, Logical and Physical address map, Memory allocation: Contiguous Memory allocation - Fixed and variable partition-Internal and External fragmentation and Compaction; Paging and Segmentation: Principle of operation - Page allocation - Hardware support for paging, Protection and sharing, Advantages and Disadvantages of paging and segmentation. Virtual Memory: Basics of Virtual Memory - Hardware and control structures - Locality of reference, Page fault, Working Set, Dirty page/Dirty bit - Demand paging, Page Replacement algorithms: Optimal, First in First Out (FIFO), Second Chance (SC), Not recently used (NRU) and Least Recently used (LRU).\n\n\n

    <b><font fgcolor='#F700FF'>Module 6 Lecture 9 hrs.</font></b>\n\n\n

File Management: Concept of File, Access methods, File types, File operation, Directory structure, File System structure, Allocation methods (contiguous, linked, indexed), Free-space management (bit vector, linked list, grouping), directory implementation (linear list, hash table), efficiency and performance. Disk Management: Disk structure, Disk scheduling - FCFS, SSTF, SCAN, C-SCAN, Disk reliability, Disk formatting, Boot-block, Bad blocks I/O Hardware: I/O devices, Device controllers, Direct memory access, Principles of 1/0 Software: Goals of Interrupt handlers, Device drivers, Device independent I/O software, Secondary-Storage Structure.\n\n\n

    <b><font fgcolor='#F700FF'> Suggested books:</font></b>\n\n\n

1. Operating System Concepts Essentials, 9th Edition by Avi Silberschatz, Peter Galvin, Greg Gagne, Wiley Asia Student Edition.\n\n\n

2. Operating Systems: Internals and Design Principles, 5th

Edition, William Stallings, Prentice Hall of India.\n\n\n

3. Operating Systems: Design and Implementation 3rd Edition, 3rd Edition, Andrew S. Tanenbaum\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. Modern Operating Systems, 4th Edition, Andrew S. Tanenbaum\n\n\n

2. Operating System: A Design-oriented Approach, 1st Edition by Charles Crowley, Irwin Publishing\n\n\n

3. Operating Systems: A Modern Perspective, 2nd Edition by Gary J. Nutt, Addison-Wesley\n\n\n

4. Design of the Unix Operating Systems, 8th Edition by Maurice Bach, Prentice-Hall of India\n\n\n

5. Understanding the Linux Kernel, 3rd Edition, Daniel P. Bovet, Marco Cesati, O\'Reilly and Associates\n\n\n

    <b><font fgcolor='#F700FF'>Course Outcomes</font></b>\n\n\n

    <b>After the completion of course, students can able to able to:</b>\n\n\n

1. Understand algorithms for process scheduling for a given specification of CPU utilization, Throughput, Turnaround Time, Waiting Time, and Response Time.\n\n\n

2. Develop the techniques for optimally allocating memory to processes by increasing memory utilization and for improving the access time.\n\n\n

3. Understand and implement file management system.\n\n\n

4. Understand the I/O management functions in OS by performing operations for synchronization between CPU and I/ O controllers.\n\n\n
</string>

    <string name="csesem4sub4">Design and Analysis of Algorithm</string>
<string name="DAA">\n\n\n

    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

1. Analyze the asymptotic performance of algorithms.\n\n\n

2 Write rigorous correctness proofs for algorithms.\n\n\n

3. Demonstrate a familiarity with major algorithms and data structures.\n\n\n

4. Apply important algorithmic design paradigms and methods. of analysis.\n\n\n

5. Synthesize efficient algorithms in common engineering design situations.\n\n\n

    <b><font fgcolor='#F700FF'>Detailed contents:</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Introduction: Characteristics of algorithm. Analysis of algorithm: Asymptotic analysis of complexity bounds - best, average and worst-case behavior; Performance measurements of Algorithm, Time and space trade-offs, Analysis of recursive algorithms through recurrence relations: Substitution method, Recursion tree method and Masters\' theorem.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Introduction to Divide and Conquer paradigm: Binary Search, Quick and Merge sorting techniques, linear time selection algorithm, Strassen\'s Matrix Multiplication, Karatsuba Algorithm for fast multiplication etc. Introduction to Heap: Min and Max Heap, Build Heap, Heap Sort\n\n\n

    <b><font fgcolor='#F700FF'> Module 3 Lecture 10 hrs.</font></b>\n\n\n

Overview of Brute-Force, Greedy Programming, Dynamic Programming, Branch- andBound and Backtracking methodologies. Greedy paradigm examples of exact optimization solution: Minimum Cost Spanning Tree, Knapsack problem, Job Sequencing Problem, Huffman Coding, Single source shortest path problem. Dynamic Programming, difference between dynamic programming and divide and conquer, Applications: Fibonacci Series, Matrix Chain Multiplication, 0-1 Knapsack Problem, Longest Common Subsequence, Travelling Salesman Problem, Rod Cutting, Bin Packing. Heuristics characteristics and their application domains.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 8 hrs.</font></b>\n\n\n

Graph and Tree Algorithms: Representational issues in graphs, Traversal algorithms: Depth First Search (DFS) and Breadth First Search (BFS); Shortest path algorithms: Bellman-Ford algorithm, Dijkstra\'s algorithm &amp; Analysis of Dijkstra\'s algorithm using heaps, Floyd-Warshall\'s all pairs shortest path algorithm. Transitive closure, Topological sorting, Network Flow Algorithm, Connected Component\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture 5 hrs.</font></b>\n\n\n

Tractable and Intractable Problems: Computability of Algorithms, Computability classes P, NP, NP-complete and NP-hard. Cook\'s theorem, Standard NP-complete problems and Reduction techniques. Approximation algorithms, Randomized algorithms\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font></b>\n\n\n

1. Introduction to Algorithms, 4th Edition, Thomas H Cormen, Charles E Lieserson, Ronald L Rivest and Clifford Stein, MITPress/McGraw-Hill.\n\n\n

2. Horowitz &amp; Sahani, "Fundamental of Computer Algorithm", Galgotia.\n\n\n

3. Basse, "Computer Algorithms: Introduction to Design &amp; Analysis", Addision Wesley.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books</font></b>\n\n\n

1. Algorithm Design, 1st Edition, Jon Kleinberg and Éva Tardos, Pearson.\n\n\n

2. Algorithm Design: Foundations, Analysis, and Internet Examples, Second Edition, Michael T Goodrich and Roberto Tamassia, Wiley.\n\n\n

3. Algorithms-A Creative Approach, 3RD Edition, UdiManber, AddisonWesley, Reading, MA.\n\n\n

    <b><font fgcolor='#F700FF'>Course Outcomes</font></b>\n\n\n

1. For a given algorithms analyze worst-case running times of algorithms based on asymptotic analysis and justify the correctness of algorithms.\n\n\n

2. Describe the greedy paradigm and explain when an algorithmic design situation calls for it. For a given problem develop the greedy algorithms.\n\n\n

3. Describe the divide-and-conquer paradigm and explain when an algorithmic design situation calls for it. Synthesize divide-and-conquer algorithms. Derive and solve recurrence relation.\n\n\n

4. Describe the dynamic-programming paradigm and explain when an algorithmic design situation calls for it. For a given problems of dynamicprogramming and develop the dynamic programming algorithms, and analyze it to determine its computational complexity.\n\n\n

5. For a given model engineering problem model it using graph and write the corresponding algorithm to solve the problems.\n\n\n

6. Explain the ways to analyze randomized algorithms (expected running time, probability of error).\n\n\n

7. Explain what an approximation algorithm is. Compute the approximation factor of an approximation algorithm (PTAS and FPTAS).\n\n\n

</string>

    <string name="csesem4sub5">Digital Electronics</string>
    <string name="DE">\n\n\n

        <b><font fgcolor='#F700FF'>   Course Outcomes:</font></b>\n\n\n

        <b>At the end of this course, students will demonstrate the ability to:</b>\n\n\n

1. Understand working of logic families and logic gates.\n\n\n

2. Design and implement Combinational and Sequential logic circuits.\n\n\n

3. Understand the process of Analog to Digital conversion and Digital to Analog conversion.\n\n\n

4. Be able to use Programmable logic devices to implement the given logical problem.\n\n\n

        <b><font fgcolor='#F700FF'>Module 1 Lecture: 7 hrs.</font></b>\n\n\n

Fundamentals of Digital Systems and logic families: Digital signals, digital circuits, AND, OR, NOT, NAND, NOR and Exclusive-OR operations, Boolean algebra, examples of IC gates, number systems-binary, signed binary, octal hexadecimal number, binary arithmetic, one\'s and two\'s complements arithmetic, codes, error detecting and correcting codes, characteristics of digital ICs, digital logic families, TTL, Schottky TTL and CMOS logic, interfacing CMOS and TTL, Tri- state logic.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lecture: 7 hrs.</font></b>\n\n\n

Combinational Digital Circuits: Standard representation for logic functions K-map representation, simplification of logic functions using K-map, minimization of logical functions. Don\'t care conditions, Multiplexer, DeMultiplexer/Decoders, Adders, Subtractors, BCD arithmetic, carry look ahead adder, serial adder, ALU, elementary ALU design, popular MSI chips, digital comparator, parity checker/generator, code converters, priority encoders, decoders/drivers for display devices, Q-M method of function realization.\n\n\n

        <b><font fgcolor='#F700FF'> Module 3 Lecture: 7 hrs.</font></b>\n\n\n

Sequential circuits and systems: A 1-bit memory, the circuit properties of Bistable latch, the clocked SR flip flop, J K-T and D types flip flops, applications of flip flops, shift registers, applications of shift registers, serial to parallel converter, parallel to serial converter, ring counter, sequence generator, ripple (Asynchronous) counters, synchronous counters, counters design using flip flops, special counter IC\'S, asynchronous sequential counters, applications of counters.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lecture: 7 hrs.</font></b>\n\n\n

A/D and D/A Converters: Digital to analog converters: weighted resistor/converter, R-2RLadder D/A converter, specifications for D/A converters, examples of D/A converter ICs, sample and hold circuit, analog to digital converters: quantization and encoding, parallel comparator A/D converter, successive approximation A/D converter, counting A/D converter, dual slope A/D converter, A/D converter using Voltage to frequency and voltage to time conversion, specifications of A/D converters, example of A/D converter ICS.\n\n\n

        <b><font fgcolor='#F700FF'>Module 5 Lecture: 7 hrs.</font></b>\n\n\n

Semiconductor memories and Programmable logic devices: Memory organization and operation, expanding memory size, classification and characteristics of memories, sequential memory, read only memory (ROM), read and write memory (RAM), content addressable memory (CAM), charge de coupled device memory (CCD), commonly used memory chips, ROM as a PLD, Programmable logic array, Programmable array logic, complex Programmable logic devices (CPLDS), Field Programmable Gate Array (FPGA).\n\n\n

        <b><font fgcolor='#F700FF'>Suggested books:</font>
        </b>\n\n\n

1. R. P. Jain, "Modern Digital Electronics", McGraw Hill Education, 2009.\n\n\n

2. M. M. Mano, "Digital logic and Computer design", Pearson Education India, 2016.\n\n\n

3. A. Kumar, "Fundamentals of Digital Circuits", Prentice Hall India, 2016.\n\n\n
    </string>

    <string name="csesem4sub6">Human Resource Development And Organizational Behavior</string>
<string name="Hrd">\n\n\n

    <b><font fgcolor='#F700FF'> Module 1 Lecture: 8 hrs.</font></b>

Introduction: HR Role and Functions, Concept and Significance of HR, Changing role of HR managers - HR functions and Global Environment, role of a HR Manager. Human Resources Planning: HR Planning and Recruitment: Planning Process - planning at different levels - Job Analysis\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture: 8 hrs.</font></b>\n\n\n

Recruitment and selection processes - Restructuring strategies - Recruitment-Sources of Recruitment-Selection Process-Placement and Induction-Retention of Employees. Training and Development: need for skill upgradation - Assessment of training needs - Retraining and Redeployment methods and techniques of training employees and executives - performance appraisal systems.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture: 8 hrs.</font></b>\n\n\n

Performance Management System: Definition, Concepts and Ethics-Different methods of Performance Appraisal- Rating Errors Competency management. Industrial Relations: Factors influencing industrial relations - State Interventions and Legal Framework - Role of Trade unions - Collective Bargaining- Workers; participation in management.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture: 8hrs.</font></b>\n\n\n

Organizational Behaviour: Definition, Importance, Historical Background, Fundamental Concepts of OB, Challenges and Opportunities for OB. Personality and Attitudes: Meaning of personality, Personality Determinants and Traits, Development of Personality, Types of Attitudes, Job Satisfaction.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture: 8hrs.</font></b>\n\n\n

Leadership: Definition, Importance, Theories of Leadership Styles. Organizational Politics: Definition, Factors contributing to Political Behavior. Conflict Management: Traditional vis-a-vis Modern View of Conflict, Functional and Dysfunctional Conflict, Conflict Process, Negotiation - Bargaining Strategies, Negotiation Process.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font></b>\n\n\n

1. Gary Dessler, "Human Resource Management" - (8th ed.,) Pearson Education, Delhi.\n\n\n

2. Robbins, S. P., Judge &amp; T. A., "Organizational Behavior", Pearson Education, 15th Edn.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. Decenzo &amp; Robbins, Personnel Human Resource Management, 3rd ed., John Wiley &amp; Sons (Pvt.) Ltd.\n\n\n

2. Biswajeet Patanayak, Human Resource Management, PHI, New Delhi\n\n\n

3. Luis R. Gomez, Mejia, Balkin and Cardy, Managing Human Resources PHI, New Delhi\n\n\n

4. Luthans, Fred: Organizational Behavior, McGraw Hill, 12th Edn.\n\n\n

5. Shukla, Madhukar: Understanding Organizations - Organizational Theory &amp; Practice in India, PH\n\n\n

</string>

    <string name="csesem4sub7">Environmental Science </string>
    <string name="ES">\n\n\n

We as human being are not an entity separate from the environment around us rather we are a constituent seamlessly integrated and co-exist with the environment around us. We are not an entity so separate from the environment that we can think of mastering and controlling it rather we must understand that each and every action of ours reflects on the environment and vice versa. Ancient wisdom drawn from Vedas about environment and its sustenance reflects these ethos. There is a direct application of this wisdom even in modern times. Idea of an activity based course on environment protection is to sensitize the students on the above issues through following two type of activities:\n\n\n

        <b><font fgcolor='#F700FF'>(a) Awareness Activities:</font></b>\n\n\n

i) Small group meetings about water management, promotion of recycle use, generation of less waste, avoiding electricity waste\n\n\n

ii) Slogan making events\n\n\n

iii) Poster making events\n\n\n

iv) Cycle rally\n\n\n

v) Lectures from experts\n\n\n

        <b><font fgcolor='#F700FF'>(b) Actual Activities:</font></b>\n\n\n

i) Plantation\n\n\n

ii) Gifting a tree to see its full growth\n\n\n

iii) Cleanliness drive\n\n\n

iv) Drive for segregation of waste\n\n\n

v) To live some big environmentalist for a week or so to understand his work\n\n\n

vi) To work in kitchen garden for mess\n\n\n

vii) To know about the different varieties of plants\n\n\n

viii) Shutting down the fans and ACs of the campus for an hour or so\n\n\n

    </string>


    <string name="csesem5sub1">Database Management System</string>
<string name="DMS">\n\n\n

    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

1. To understand the different issues involved in the design and implementation of a database system.\n\n\n

2. To study the physical and logical database designs, database modeling, relational, hierarchical, and network models\n\n\n

3. To understand and use data manipulation language to query, update, and manage a database\n\n\n

4. To develop an understanding of essential DBMS concepts such as: database security, integrity, concurrency, distributed database, and intelligent database, Client/Server (Database Server), Data Warehousing.\n\n\n

5. To design and build a simple database system and demonstrate competence with the fundamental tasks involved with modeling, designing, and implementing a DBMS.\n\n\n

    <b><font fgcolor='#F700FF'>Detailed contents\n\n\n</font></b>

    <b><font fgcolor='#F700FF'>Module 1 Lecture 6 hrs.</font></b>\n\n\n

Database system architecture: Data Abstraction, Data Independence, Data Definition Language (DDL), Data Manipulation Language (DML).\n\n\n

Data models: Entity-relationship model, network model, relational and object oriented data models, integrity constraints, data manipulation operations.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Relational query languages: Relational algebra, Tuple and domain relational calculus, SQL3, DDL and DML constructs, Open source and Commercial DBMS - MYSQL, ORACLE, DB2, SQL server.\n\n\n

Relational database design: Domain and data dependency, Armstrong\'s axioms, Normal forms, Dependency preservation, Lossless design.\n\n\n

Query processing and optimization: Evaluation of relational algebra expressions, Query equivalence, Join strategies, Query optimization algorithms.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture 4 hrs.</font></b>\n\n\n

Storage strategies: Indices, B-trees, hashing.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 8 hrs.</font></b>\n\n\n

Transaction processing: Concurrency control, ACID property, Serializability of scheduling, Locking and timestamp based schedulers, Multi-version and optimistic Concurrency Control schemes, Database recovery.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture 6 hrs.</font></b>\n\n\n

Database Security: Authentication, Authorization and access control, DAC, MAC and RBAC models, Intrusion detection, SQL injection.\n\n\n

    <b><font fgcolor='#F700FF'>Module 6 Lecture 6 hrs.</font></b>\n\n\n

Advanced topics: Object oriented and object relational databases, Logical databases, Web databases, Distributed databases, Data warehousing and data mining.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books:</font></b>\n\n\n

1. "Database System Concepts", 6th Edition by Abraham Silberschatz, Henry F. Korth, S. Sudarshan, McGraw-Hill Suggested reference books:\n\n\n

1. "Principles of Database and Knowledge Base Systems", Vol 1 by J. D. Ullman, Computer SciencePress.\n\n\n

2. "Fundamentals of Database Systems", 5th Edition by R. Elmasri and S. Navathe, Pearson Education\n\n\n

3. "Foundations of Databases", Reprint by Serge Abiteboul, Richard Hull, Victor Vianu, Addison-Wesley Course Outcomes\n\n\n

1. For a given query write relational algebra expressions for that query and optimize the developed expressions\n\n\n

2. For a given specification of the requirement design the databases using E-R method and normalization.\n\n\n

3. For a given specification construct the SQL queries for Open source and Commercial DBMS-MYSQL, ORACLE, and DB2.\n\n\n

4. For a given query optimize its execution using Query optimization algorithms\n\n\n

5. For a given transaction-processing system, determine the transaction atomicity, consistency, isolation, and durability.\n\n\n

6. Implement the isolation property, including locking, time stamping based on concurrency control and Serializability of scheduling.\n\n\n

Database Management Systems Lab Hands-on experiments related to the course contents of PCC CS 501.\n\n\n
</string>

<string name="csesem5sub2">Formal Language And Automata Theory</string>
<string name="FLAT">\n\n\n
    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

To develop a formal notation for strings, languages and machines.\n\n\n

To design finite automata to accept a set of strings of a

language.\n\n\n

To prove that a given language is regular and apply the closure properties of languages.\n\n\n

Design context free grammars to generate strings from a context free language and convert them into normal forms. Prove equivalence of languages accepted by Push Down\n\n\n

Automata and languages generated by context free grammars Identify the hierarchy of formal languages, grammars and machines.\n\n\n

Distinguish between computability and non-computability and Decidability and undesirability\n\n\n

<b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Introduction: Alphabet, languages and grammars, productions and derivation, Chomsky hierarchy of languages.\n\n\n

Regular languages and finite automata: Regular expressions and languages, deterministic finite automata (DFA) and equivalence with regular expressions, nondeterministic finite automata (NFA) and equivalence with DFA, regular grammars and equivalence with finite automata, properties of regular languages, pumping lemma for regular languages, minimization of finite automata.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Context-free languages and pushdown automata: Context-free grammars (CFG) and Context-free languages (CFL), Chomsky and Greibach normal forms, nondeterministic pushdown automata (PDA) and equivalence with CFG, parse trees, ambiguity in CFG, pumping lemma for context-free languages, deterministic pushdown automata, closure properties of CFLs.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture 2 hrs</font></b>\n\n\n

Context-sensitive languages: Context-sensitive grammars (CSG) and Context-sensitive languages, linear bounded automata and equivalence with CSG.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 10 hrs.</font></b>\n\n\n

Turing machines: The basic model for Turing machines (TM), Turing recognizable (Recursively enumerable) and Turing-decidable (recursive) languages and their closure properties, variants of Turing machines, nondeterministic TMS and equivalence with deterministic TMs, unrestricted grammars and equivalence with Turing machines, TMs as enumerators.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture 8 hrs.</font></b>\n\n\n

Undecidability: Church-Turing thesis, universal Turing machine, the universal and diagonalization languages, reduction between languages and Rice\'s theorem, undecidable problems about languages.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested books</font></b>\n\n\n

1. John E. Hopcroft, Rajeev Motwani and Jeffrey D. Ullman, Introduction to Automata Theory, Languages, and Computation, Pearson Education Asia.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested reference books:</font></b>\n\n\n

1. Harry R. Lewis and Christos H. Papadimitriou, Elements of the Theory of Computation, Pearson EducationAsia.\n\n\n

2. Dexter C. Kozen, Automata and Computability, Undergraduate Texts in Computer Science, Springer.\n\n\n

3. Michael Sipser, Introduction to the Theory of Computation, PWS Publishing.\n\n\n

4. John Martin, Introduction to Languages and the Theory of Computation, Tata McGraw Hill.\n\n\n

    <b><font fgcolor='#F700FF'>Course Outcomes:\n\n\n</font></b>

    <b>After the completion of course, students can able to able to:</b>\n\n\n

1. Write a formal notation for strings, languages and machines.\n\n\n

2. Design finite automata to accept a set of strings of a language.\n\n\n

3. For a given language determine whether the given language is regular or not.\n\n\n

4. Design context free grammars to generate strings of context free language. 5. Determine equivalence of languages accepted by Push

Down Automata and languages generated by context free

grammars\n\n\n

6. Write the hierarchy of formal languages, grammars and machines.\n\n\n

7. Distinguish between computability and non-computability and Decidability And undecidability.\n\n\n</string>


    <string name="csesem5sub3">Artificial Intelligence</string>
<string name="AI">\n\n\n

    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

Understand the broader context of Artificial Intelligence Develop a basic understanding of the building blocks of Al such as intelligent agents, search, inference, logic, and learning.\n\n\n

Learn core concepts in artificial intelligence, such as heuristic search, game playing, formal logic, knowledge representation, knowledge discovery, decision theory, machine learning, and natural language processing.\n\n\n

    <b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n

    M<b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Introduction: Overview, Turing test, Intelligent agents. Problem Solving: Solving Problems by Searching: Uninformed search - Depth First Search, Breadth First Search, DFID, Heuristic search - Generate and Test, Best First Search, Beam Search, Hill Climbing, A*, Problem reduction search - AND/OR Graphs, AO*, Constraint satisfaction, Means-ends analysis, Stochastic search methods - Simulated Annealing, Particle Swarm Optimization, Game Playing - Minimax algorithm, Alpha-beta pruning\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Knowledge and Reasoning: Building a knowledge base - Propositional logic, first order logic, Inference in first order logic, Resolution - refutation proofs, Theorem Proving in First Order Logic; Planning, partial order planning, Uncertain Knowledge and Reasoning, Probabilities, Bayesian Networks\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture 10 hrs.</font></b>\n\n\n

Learning: Overview of different forms of learning: unsupervised, supervised, semi-supervised, K-means clustering algorithm, Decision Trees, Neural Networks, Deep Learning.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture 10 hrs.</font></b>\n\n\n

Advanced topics: Introduction to Computer Vision, Natural Language Processing, Expert Systems, Robotics, Genetic Algorithm,\n\n\n

    <b><font fgcolor='#F700FF'>Text Books</font>
    </b>\n\n\n

1. S. Russell and P. Norvig, "Artificial Intelligence: A Modern Approach," Prentice Hall\n\n\n

2. E. Rich, K. Knight and S. B. Nair, "Artificial Intelligence," TMH References\n\n\n

1. C. Bishop, Pattern Recognition and Machine Learning," Springer\n\n\n

3. D. W. Patterson, "Introduction to artificial intelligence and expert systems," Prentice Hall\n\n\n

4. A. C.Staugaard, Jr., "Robotics and AI: An Introduction to Applied Machine Intelligence," Prentice Hall\n\n\n

5. I. Bratko, "Prolog Programming for Artificial Intelligence," Addison-Wesley\n\n\n

6. S. O. Haykin, "Neural Networks and Learning Machines," Prentice Hall\n\n\n

7. D.Jurafsky and J. H. Martin, "Speech and Language Processing," Prentice Hall\n\n\n

    <b><font fgcolor='#F700FF'>Course Outcomes:\n\n\n</font></b>

    <b>After undergoing this course, the students will be able to:</b> Build intelligent agents for search and games &amp; Solve Al problems through programming with Python Learning optimization and inference algorithms for model learning Design and develop programs for an agent to learn and act in a structured environment.
</string>

<string name="csesem5sub4">Software Engineering</string>
<string name="SE">\n\n\n

    <b><font fgcolor='#F700FF'> Detailed contents</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lectures: 8 hrs.</font></b>\n\n\n

Introduction: What is Software Engineering and its history, software crisis, Evolution of a Programming System Product, Characteristics of Software, Brooks\' No Silver Bullet, and Software Myths, Software Development Life Cycles: Software Development Process, The Code-and-Fix model, The Waterfall model, The Evolutionary Model, The Incremental Implementation, Prototyping, The Spiral Model, Software Reuse, Critical Comparisons of SDLC models, An Introduction to Non-Traditional Software Development Process: Rational Unified Process, Rapid Application Development, Agile Development Process.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lectures: 8 hrs.</font></b>\n\n\n

Requirements: Importance of Requirement Analysis, User Needs, Software Features and Software Requirements, Classes of User Requirements: Enduring and Volatile, Sub phases of Requirement Analysis, Functional and Nonfunctional requirements, Barriers to Eliciting User requirements, The software requirements document and SRS standards, Requirements Engineering, Case Study of SRS for a Real Time System. Tools for Requirements Gathering: Document Flow Chart, Decision Table, Decision Tree, Introduction to nontraditional Requirements.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lectures: 6 hrs.</font></b>\n\n\n

Software Design: Goals of good software design, Design strategies and methodologies, Data oriented software design, Coupling, Cohesion, Modular structure, Packaging, Structured Analysis: DFD, Data Dictionary, Structured Design: Structure chart, Object oriented design, Top-down and bottom-up approach, UML, UML Diagrams, Design patterns,.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lectures: 6 hrs.</font></b>
    \n\n\n

Software Project Management: Overview of Project Manager Responsibilities &amp; project planning, Software Measurement and Metrics: Line of Code (LOC), Function Point (FP) based measures, Various Size Oriented Measures: Halstead\'s software science, Project Size estimation Metrics Project Estimation, Techniques, COCOMO, Staffing Level Estimation, Scheduling, Organization &amp; Team Structures Staffing, Risk Management.\n\n\n

    <b><font fgcolor='#F700FF'> Module 5 Lectures: 5 hrs.</font></b>\n\n\n

Software Coding &amp; Testing: Development: Selecting a language, Coding guidelines, Writing code, Code documentation. Testing process, Design of test cases, Functional Testing: Boundary value analysis, Equivalence class testing, Decision table testing, Cause effect graphing, Structural testing, Cyclomatic Complexity Measures: Control flow graphs, Path testing, Data flow and mutation testing, Unit testing, Integration and system testing, Debugging, Alpha &amp; beta testing, testing tools &amp; standards.\n\n\n

    <b><font fgcolor='#F700FF'>Module 6 Lectures: 4 hrs.</font></b>\n\n\n

Software Maintenance: Management of maintenance, Maintenance process, Maintenance models, Regression testing, Reverse engineering, Software reengineering, Configuration management, documentation.\n\n\n

    <b><font fgcolor='#F700FF'>Module 7 Lectures: 3 hrs.</font></b>\n\n\n

Software Reliability &amp; Quality Management: Introduction to reliability and metrics to reliability measure, Overview of S/W Quality management System ISO 9000, SEI CMM.\n\n\n

    <b><font fgcolor='#F700FF'>Text Book:</font></b>
    \n\n\n

1. Software Engineering: A Practitioner\'s Approach, R. S. Pressman, McGraw Hill\n\n\n

2. Fundamental of Software Engg. By Rajib Mall 4th edition PHI\n\n\n

3. A Concise Introduction to Software Engineering By Pankaj Jalote\n\n\n

    <b><font fgcolor='#F700FF'>Reference Book:</font></b>\n\n\n

1. Zero Defect Software, G. G. Schulmeyer, McGraw-Hill 2. Object Oriented Modeling and Design, J. Rumbaugh, Prentice Hall\n\n\n

3. Software Engineering, K.K. Aggarwal, Yogesh Singh, New Age International Publishers\n\n\n
</string>

    <string name="csesem5sub5">Professional Skill Development</string>
    <string name="psd">\n\n\n
        <b><font fgcolor='#F700FF'>   Objectives of the course:</font></b>
        \n\n\n

1. To learn various interpersonal skills\n\n\n

2. To help in developing various professionals skills.\n\n\n

3. To cover the facets of verbal and non-verbal languages, public speech, reading gestures and body languages, preparing for group discussion and enhancing presentations skills.\n\n\n

4. To enable learners to speak fluently and flawlessly in all kinds of communicative Contexts with speakers of all nationalities.\n\n\n

        <b><font fgcolor='#F700FF'>Detail contents:\n\n\n</font></b>

        <b><font fgcolor='#F700FF'>Module 1 Lecture 10 hrs.</font></b>\n\n\n

Communication skills: Public speaking, Group discussion, Gestures and body language &amp; professional presentation skills\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lecture 10 hrs.</font></b>\n\n\n

Interpersonal skills: Group dynamics, Negotiation skills, Leadership, Emotional intelligence\n\n\n

        <b><font fgcolor='#F700FF'>Module 3 Lecture 10 hrs.\n\n\n</font></b>

Employability and Corporate Skills: Time management and effective planning, Stress management, People skills, Team work, development of leadership qualities, Decision making and Negotiation skills, Positive attitude, Self-motivation, Professional ethics, Business etiquettes, balancing board room.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lecture 10 hrs.\n\n\n</font></b>

Business writing skills, Resume Writing. Interview Skills, Technical Presentation, Guest Lecture, Professional Ethics, Project Management, Entrepreneurship.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested reference books: </font>
        </b>\n\n\n
        1. "Personality Development and Soft Skills", Barun Mitra, Oxford University Press. \n\n\n2. "Managing Soft Skills for Personality Development", B.N. Ghosh, McGraw Hill.\n\n\n 3. "Communication Skills and Soft Skills: An Integrated Approach", E. Suresh Kumar, Pearson \n\n\n4. "Communication to Win", Richard Denny, Kogan Page India Pvt. Ltd.\n\n\n

        <b><font fgcolor='#F700FF'>Course outcomes</font></b>\n\n\n

1. Student can able to write their resume and can prepare for presentation, group discussion and interview.\n\n\n

2. Student can develop interpersonal skills like negotiation and leadership skills.\n\n\n

3. Students can develop Employability and Corporate Skills with proper time management and stress management.\n\n\n

4. Students learn to practice the professional ethics, project management and Entrepreneurship.\n\n\n
    </string>

    <string name="csesem5sub6">Constitution Of INDIA/Essence Of INDIAN Knowledge Traditional</string>
    <string name="ct">\n\n\n
         The Constitution of India is the supreme law of India. Parliament of India cannot make any law which violates the Fundamental Rights enumerated under the Part III of the Constitution. The Parliament of India has been empowered to amend the Constitution under Article 368, however, it cannot use this power to change the "basic structure" of the constitution, which has been ruled and explained by the Supreme Court of India in its historical judgments. The Constitution of India reflects the idea of "Constitutionalism" - a modern and progressive concept historically developed by the thinkers of "liberalism" - an ideology which has been recognized as one of the most popular political ideology and result of historical struggles against arbitrary use of sovereign power by state. The historic revolutions in France, England, America and particularly European Renaissance and Reformation movement have resulted into progressive legal reforms in the form of "constitutionalism" in many countries. The Constitution of India was made by borrowing models and principles from many countries including United Kingdom and America.\n\n\n

The Constitution of India is not only a legal document but it also reflects social, political and economic perspectives of the Indian Society. It reflects India\'s legacy of "diversity". It has been said that Indian constitution reflects ideals of its freedom movement, however, few critics have argued that it does not truly incorporate our own ancient legal heritage and cultural values. No law can be "static" and therefore the Constitution of India has also been amended more than one hundred times. These amendments reflect political, social and economic developments since the year 1950. The Indian judiciary and particularly the Supreme Court of India has played an historic role as the guardian of people. It has been protecting not only basic ideals of the

Constitution but also strengthened the same through progressive interpretations of the text of the Constitution. The judicial activism of the Supreme Court of India and its historic contributions has been recognized throughout the world and it gradually made it "as one of the strongest court in the world".\n\n\n


<b><font fgcolor='#F700FF'> Course content:</font></b>\n\n\n

1. Meaning of the constitution law and constitutionalism\n\n\n

2. Historical perspective of the Constitution of India\n\n\n

4. Salient features and characteristics of the Constitution of India\n\n\n

5. Scheme of the fundamental rights\n\n\n

6. The scheme of the Fundamental Duties and its legal status\n\n\n

7. The Directive Principles of State Policy Its importance and implementation\n\n\n

8. Federal structure and distribution of legislative and financial powers between the Union and the States\n\n\n

9. Parliamentary Form of Government in India - The constitution powers and status of the President of India\n\n\n

10. Amendment of the Constitutional Powers and Procedure\n\n\n

11. The historical perspectives of the constitutional amendments in India\n\n\n

12. Emergency Provisions: National Emergency, President Rule, Financial Emergency\n\n\n

13. Local Self Government - Constitutional Scheme in India\n\n\n

14. Scheme of the Fundamental Right to Equality\n\n\n

15. Scheme of the Fundamental Right to certain Freedom under Article 19\n\n\n

16. Scope of the Right to Life and Personal Liberty under Article 21.\n\n\n
    </string>

    <string name="csesem5sub7">Software Training</string>
<string name="St">

</string>
    <string name="csesem5sub8">MOOCS/NPTEL ETC.COURSES-1/SWAYAM</string>
    <string name="St1">

</string>

    <string name="csesem5sub9">Summer Entrepreneurship </string>
    <string name="St2">

</string>


<string name="csesem5sub10">Seminar</string>
<string name="St3">

</string>


    <string name="csesem6sub1">Compiler Design</string>
<string name="CD">\n\n\n

    <b><font fgcolor='#F700FF'> Objectives of the course</font></b>\n\n\n

    <b>To understand and list the different stages in the process of compilation.</b>\n\n\n

• Identify different methods of lexical analysis\n\n\n

• Design top-down and bottom-up parsers\n\n\n

• Identify synthesized and inherited attributes\n\n\n

• Develop syntax directed translation schemes\n\n\n

•Develop algorithms to generate code for a target machine\n\n\n

• To study the underlying theories in designing of a compiler\n\n\n

• The study especially consider the imperative languages\n\n\n

    <b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lecture: 6 hrs.</font></b>\n\n\n Introduction: Phases of compilation and overview. Lexical Analysis (scanner): Regular languages, finite automata, regular expressions, from regular expressions to finite automata, scanner generator (lex, flex).\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture: 9 hrs.</font></b>\n\n\n Syntax Analysis (Parser): Context-free languages and grammars, push-down automata, LL(1) grammars and top-down parsing, operator grammars, LR(O), SLR(1), LR(1), LALR(1) grammars and bottom-up parsing, ambiguity and LR parsing, LALR(1) parser generator (yacc, bison).\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture: 10 hrs. </font></b>\n\n\nSemantic Analysis: Attribute grammars, syntax directed definition, evaluation and flow of attribute in a syntax tree. Symbol Table: Its structure, symbol attributes and management. Run-time environment: Procedure activation, parameter passing, value return, memory allocation, and scope.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture: 10 hrs.</font></b>\n\n\n Intermediate Code Generation: Translation of different language features, different types of intermediate forms. Code Improvement (optimization) Analysis: control-flow, data-flow dependence etc.; Code improvement local optimization, global optimization, loop optimization, peep-hole optimization etc. Architecture dependent code improvement: instruction scheduling (for pipeline), loop optimization (for cache memory) etc. Register allocation and target code generation.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture: 5 hrs.</font></b>\n\n\n Advanced topics: Type systems, data abstraction, compilation of Object Oriented features and non-imperative programming languages.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested Books:</font></b>\n\n\n

1. Compilers Principles Techniques And Tools by Alfred V. Aho, Ravi Sethi, Jeffery D. Ullman. Pearson Education.\n\n\n

    <b><font fgcolor='#F700FF'>Suggested Reference Book</font></b>\n\n\n

1. Compiler Design by Santanu Chattopadhyay. PHI\n\n\n

2. Modern Compiler Design by Dick Grune, E. Bal. Ceriel, J. H. Jacobs, and Koen G. Langendoen, Viley Dreamtech.\n\n\n

    <b><font fgcolor='#F700FF'>Course Outcomes</font></b>\n\n\n

    <b>After the completion of course, students can able to able to:</b>\n\n\n

1. Develop the lexical analyser for a given grammar specification.\n\n\n

2. Design top-down and bottom-up parsers for a given parser specification\n\n\n

3. Develop syntax directed translation schemes\n\n\n

4. Develop algorithms to generate code for a target machine\n\n\n
</string>


    <string name="csesem6sub2">Compiler Design Lab</string>
    <string name="CDL"> \n\n\nHands on experiments related to the course contents of PCC CS 601</string>

    <string name="csesem6sub3">Computer Network</string>
    <string name="CN">\n\n\n

        <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

• To develop an understanding of modern network architectures from a design and performance perspective.\n\n\n

•To introduce the student to the major concepts involved in wide-area networks (WANs), local area networks (LANs) and Wireless LANs (WLANs).\n\n\n

• To provide an opportunity to do network programming\n\n\n

• To provide a WLAN measurement ideas.\n\n\n

        <b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n

        <b><font fgcolor='#F700FF'>Module 1 Lecture 8 hrs.</font></b>\n\n\n Data communication Components: Representation of data and its flow Networks, Various Connection Topology, Protocols and Standards, OSI model, Transmission Media, LAN: Wired LAN, Wireless LANs, Connecting LAN and Virtual LAN, Techniques for Bandwidth utilization: Multiplexing - Frequency division, Time division and Wave division, Concepts on spread spectrum.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 Lecture 8 hrs.</font></b>\n\n\n Data Link Layer and Medium Access Sub Layer: Error Detection and Error Correction - Fundamentals, Block coding, Hamming Distance, CRC; Flow Control and Error control protocols - Stop and Wait, Go back N ARQ, Selective Repeat ARQ, Sliding Window, Piggybacking, Random Access, Multiple access protocols -Pure ALOHA, Slotted ALOHA, CSMA/CD,CDMA/CA\n\n\n

        <b><font fgcolor='#F700FF'>Module 3 Lecture 8 hrs. </font></b>\n\n\n Network Layer: Switching, Logical addressing IPV4, IPV6; Address mapping - ARP, RARP, BOOTP and DHCP-Delivery, Forwarding and Unicast Routing protocols.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 Lecture 8 hrs.</font></b>\n\n\n Transport Layer: Process to Process Communication, User Datagram Protocol (UDP), Transmission Control Protocol (TCP), SCTP Congestion Control; Quality of Service, QoS improving techniques: Leaky Bucket and Token Bucket algorithm.\n\n\n

        <b><font fgcolor='#F700FF'>Module 5 Lecture 8 hrs. </font></b>\n\n\nApplication Layer: Domain Name Space (DNS), DDNS, TELNET, EMAIL, File Transfer Protocol (FTP), WWW, HTTP, SNMP, Bluetooth, Firewalls, Basic concepts of Cryptography.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested Books</font></b>\n\n\n

1. Data Communication and Networking, 4th Edition, Behrouz A. Forouzan, McGraw-Hill.\n\n\n

2. Data and Computer Communication, 8th Edition, William Stallings, Pearson Prentice Hall India.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested reference books\n\n\n</font></b>

1. Computer Networks, 8th Edition, Andrew S. Tanenbaum, Pearson New International Edition.\n\n\n

2. Internetworking with TCP/IP, Volume 1, 6th Edition Douglas Comer, Prentice Hall of India.\n\n\n

3. TCP/IP Illustrated, Volume 1, W. Richard Stevens, Addison-Wesley, United States of America.\n\n\n

        <b><font fgcolor='#F700FF'>Course Outcomes\n\n\n</font></b>

        <b>After the completion of course, students can able to able to:</b>\n\n\n

1. Explain the functions of the different layer of the OSI Protocol.\n\n\n

2. Draw the functional block diagram of wide-area networks (WANs), local area networks (LANs) and Wireless LANs (WLANs) and can able to describe the function of each block.\n\n\n

3. Program for a given problem related TCP/IP protocol.\n\n\n

4. Configure DNS DDNS, TELNET, EMAIL, File Transfer Protocol (FTP), WWW, HTTP, SNMP, Bluetooth, Firewalls using open source available software and tools.\n\n\n
    </string>

    <string name="csesem6sub4">Computer Networks Lab</string>
    <string name="CNL">\n\n\nHands-on Experiments related to the course contents of PCC CS 602</string>

    <string name="csesem6sub5"> Machine Learning</string>
    <string name="Ml2">\n\n\n

        <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

• To learn the concept of how to learn patterns and concept from data.\n\n\n

• Design and analyze various machine learning algorithms and their applications in recent trends.\n\n\n

• Evaluate the various factors of machine learning to measure the performance.\n\n\n

• Understand basic of machine learning\'s application in recent trend of technology.\n\n\n

        <b><font fgcolor='#F700FF'>Detailed contents\n\n\n</font></b>

        <b><font fgcolor='#F700FF'>Module 1 (Lecture 8 hrs.) </font></b>\n\n\nIntroduction: Basic definitions, Linear Algebra, Statistical learning theory, types of learning, hypothesis space and Inductive bias, evaluation and cross validation, Optimization.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2 (Lecture 8 hrs.) </font></b>\n\n\nStatistical Decision Theory, Bayesian Learning (ML, MAP, Bayes estimates, Conjugate priors), Linear Regression, Ridge Regression, Lasso, Principal Component Analysis, Partial Least Squares\n\n\n

        <b><font fgcolor='#F700FF'>Module 3 (Lecture 8 hrs.) </font></b>\n\n\nLinear Classification, Logistic Regression, Linear Discriminant Analysis, Quadratic Discriminant Analysis, Perceptron, Support Vector Machines + Kernels, Artificial Neural Networks + Back Propagation, Decision Trees, Bayes Optimal Classifier, Naive Bayes.\n\n\n

        <b><font fgcolor='#F700FF'>Module 4 (Lecture 8 hrs.)</font></b>\n\n\n Hypothesis testing, Ensemble Methods, Bagging Adaboost Gradient Boosting, Clustering, K-means, K-medoids, Density-based Hierarchical, Spectral.\n\n\n

        <b><font fgcolor='#F700FF'>Module 5 (Lecture 8 hrs.)</font></b>\n\n\n Expectation Maximization, GMMs, Learning theory Intro to Reinforcement Learning, Bayesian Networks.\n\n\n

        <b><font fgcolor='#F700FF'>Suggested books:</font></b>\n\n\n

1. Machine Learning. Tom Mitchell. First Edition, McGraw-Hill, 1997\n\n\n

2. Introduction to Machine Learning Edition 2, by Ethem Alpaydin\n\n\n

        <b><font fgcolor='#F700FF'>  Suggested Reference Books:</font></b>\n\n\n

1. J. Shavlik and T. Dietterich (Ed), Readings in Machine Learning, Morgan Kaufmann, 1990.\n\n\n

2. P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995.\n\n\n

3. Understanding Machine Learning. Shai Shalev-Shwartz and Shai Ben-David. Cambridge University Press. 2017. [SS-2017]\n\n\n

4. The Elements of Statistical Learning. Trevor Hastie, Robert Tibshirani and Jerome Friedman. Second Edition. 2009. [TH-2009]\n\n\n
    </string>

    <string name="csesem7sub1">Biology For Engineers</string>
    <string name="BFEcse">

           \n\n\n


<b>2 (one hour) lectures and one (one hour) tutorial per week. Only lecture hours are shown</b>\n\n\n

        <b><font fgcolor='#F700FF'>Module 1:Introduction (2 lectures) Purpose:</font></b>\n\n\n
        To convey that Biology is as important a scientific discipline as Mathematics, Physics and Chemistry Bring out the fundamental differences between science and engineering by drawing a comparison between eye and camera, Bird flying and aircraft.\n\n
        Mention the most exciting aspect of biology as an independent scientific discipline. Why we need to study biology? Discuss how biological observations of 18th Century that lead to major discoveries.\n\n
        Examples from Brownian motion and the origin of thermodynamics by referring to the original observation of Robert Brown and Julius Mayor. These examples will highlight the fundamental importance of observations in any scientific inquiry.\n\n\n

        <b><font fgcolor='#F700FF'>Module 2:Classification (3 lectures) Purpose: </font></b>\n\n\n
        To convey that classification per seis not what biology is all about.\n
        The underlying criterion, such as morphological, biochemical or ecological be highlighted. Hierarchy of life forms at phenomenological level. A common thread weaves this hierarchy Classification. Discuss classification based on (a) cellularity-Unicellular or multicellular (b) ultrastructure- prokaryotes or eucaryotes.\n\n
        energy and Carbon utilisation -Autotrophs, heterotrophs, lithotropes (d) Ammonia excretion - aminotelic, uricoteliec, ureotelic (e) Habitata-acquatic or terrestrial (e) Molecular taxonomy-three major kingdoms of life. A given organism can come under different category based on classification.\n\n
        Model organisms for the study of biology come from different groups. E. coli, S. cerevisiae, D. Melanogaster, C. elegance, A. Thaliana, M. musculus\n\n\n

        <b><font fgcolor='#F700FF'>Module 3:Genetics (4 lectures) Purpose: </font></b>\n\n\n
        To convey that "Genetics is to biology what Newton's laws are to Physical Sciences" Mendel\'s laws, Concept of segregation and independent assortment.\n\n
        Concept of allele. Gene mapping, Gene interaction, Epistasis. Meiosis and Mitosis be taught as a part of genetics. Emphasis to be give not to the mechanics of cell division nor the phases but how genetic material passes from parent to offspring.\n\n
        Concepts of recessiveness and dominance. Concept of mapping of phenotype to genes. Discuss about the single gene disorders in humans. Discuss the concept of complementation using human genetics.\n\n

        <b><font fgcolor='#F700FF'>  Module 4: Biomolecules (4 lectures) Purpose:</font></b>\n\n
        To convey that all forms of life has the same building blocks and yet the manifestations are as diverse as one can imagine Molecules of life. \n\n
        In this context discuss monomeric units and polymeric structures. Discuss about sugars, starch and cellulose. Amino acids and proteins. Nucleotides and DNA/RNA. Two carbon units and lipids.\n\n\n

        <b><font fgcolor='#F700FF'>Module 5: Enzymes (4 lectures) Purpose: </font></b>\n\n
        To convey that without catalysis life would not have existed on earth.\n\n
        Enzymology: How to monitor enzyme catalysed reactions. How does an enzyme catalyze reactions? Enzyme classification. Mechanism of enzyme action. \n\n
        Discuss at least two examples. Enzyme kinetics and kinetic parameters. Why should we know these parameters to understand biology? RNA catalysis.\n\n\n

        <b><font fgcolor='#F700FF'>Module 6: Information Transfer (4 lectures) Purpose: </font></b>\n\n
        The molecular basis of coding and decoding genetic information is universal Molecular basis of information transfer.\n\n
        DNA as a genetic material. Hierarchy of DNA structure-from single stranded to double helix to nucleosomes. Concept of genetic code. \n\n
        Universality and degeneracy of genetic code. Define gene in terms of complementation and recombination.\n\n\n

        <b><font fgcolor='#F700FF'>Module 7: Macromolecular analysis (5 lectures) Purpose: </font></b>\n\n
        How to ana lyse biological processes at the reductionist level Proteins-structure and function.\n\n
        Hierarch in protein structure. Primary secondary, tertiary and quaternary structure. Proteins as enzymes, transporters, receptors and structural elements.\n\n\n

        <b><font fgcolor='#F700FF'>Module 8: Metabolism (4 lectures) Purpose: </font></b>\n\n
        The fundamental principles of energy transactions are the same in physical and biological world.\n\n Thermodynamics as applied to biological systems. Exothermic and endothermic versus endergonic and exergoinc reactions.\n\n Concept of Keqand its relation to standard free energy. Spontaneity. ATP as an energy currency. \nThis should include the breakdown of glucose to CO2 + H2O (Glycolysis and Krebs cycle) and synthesis of glucose from CO2 and H2O (Photosynthesis). \nEnergy yielding and energy consuming reactions. Concept of Energy charge\n\n

        <b><font fgcolor='#F700FF'>Module 9: Microbiology (3 lectures)</font></b>
        Concept of single celled organisms. Concept of species and strains. \nIdentification and classification of microorganisms. \nMicroscopy. Ecological aspects of single celled organisms.\n Sterilization and media compositions. Growth kinetics.\n\n\n

        <b><font fgcolor='#F700FF'>References:</font></b>\n\n

1. Biology: A global approach: Campbell, N. A.; Reece, J. B.; Urry, Lisa; Cain, M, L; Wasser man, S. A.; Minorsk y, P. V.; Jackson, R. B. Pearson Education Ltd\n\n\n

2. Outlines of Biochemistry, Conn, E.E, Stumpf, P.K; Bruening, G; Doi, R.H. John Wiley and Sons\n\n\n

3. Principles of Biochemistry (V Edition), By Nelson, D. L.; and\n

Cox, M. M.W.H. Freeman and Company 4. Molecular Genetics (Second edition), Stent, G. S., and Calender, R. W.H. Freeman and company,\n Distributed by Satish

Kumar Jain for CBS Publisher\n\n

5. Microbiology, Prescott, L.M J.P. Harley and C.A. Klein 1995.\n

2nd edition Wm, C. Brown Publishers\n\n\n

        <b><font fgcolor='#F700FF'>Course Outcomes:</font></b>\n\n

        <b>After studying the course, the student will be able to: </b>
        Describe how biological observations of 18th Century that lead to major discoveries. \nConvey that classification per se is not what biology is all about but highlight the underlying criteria, such as morphological, biochemical and ecological Highlight the concepts of recessiveness and dominance during the passage of genetic material from parent to offspring \nConvey that all forms of life have the same building blocks and yet the manifestations are as diverse as one can imagine\n Classify enzymes and distinguish between different mechanisms of enzyme action.\n Identify DNA as a genetic material in the molecular basis of information transfer.\n Analyse biological processes at the reductionistic level Apply thermodynamic principles to biological systems.\n Identify and classify microorganisms.
    </string>


    <string name="csesem7sub2">Induction Program</string>
<string name="IPcse">\n\n\n

    <b><font fgcolor='#F700FF'>Induction program (mandatory) ~</font></b>\n\n\n

    <b>Induction program for students to be offered right at the start of the first year.</b>\n\n\n

    <b><font fgcolor='#F700FF'>3 weeks duration</font></b>\n\n\n

•Physical activity\n\n\n

•Creative Arts\n\n\n

• Universal Human Values\n\n\n

• Literary\n\n\n

•Proficiency Modules\n\n\n

•Lectures by Eminent People\n\n\n

• Visits to local Areas\n\n\n

• Familiarization to Dept./Branch &amp;Innovations\n\n\n

</string>
<string name="csesem7sub3">Project-I</string>
<string name="projectcse1">
    PROJECT-I
</string>

    <string name="csesem7sub4">Summer Entrepreneurship-III</string>
    <string name="Summercse3">
  Summer Entrepreneurship-III
</string>

    <string name="csesem7sub5">Professional Elective Lab-II</string>
    <string name="Professionalcse">
    Professional Elective Lab-II
</string>

<string name="csesem7sub6">Open Elective-I</string>
<string name="csesem7sub7">Open Elective-II</string>
<string name="csesem7sub8">Program Elective-III</string>




<string name="csesem7ele1">Data Science</string>
<string name="DataScse">\n\n\n


    <b><font fgcolor='#F700FF'>Objectives of the course</font></b>\n\n\n

The objective of this course is to impart necessary knowledge of the mathematical foundations needed for data science and develop programming skills required to build data science applications.\n\n\n
 <b><font fgcolor='#F700FF'>
     Detailed Contents</font></b>\n\n\n
 <b><font fgcolor='#F700FF'>
        Module 1 Lecture 4 hrs.</font>
 </b>\n\n\n

1. Introduction to Data Science: Concept of Data Science, Traits of Big data, Web Scraping, Analysis vs Reporting\n\n\n
 <b><font fgcolor='#F700FF'>
        Module 2 Lecture 6 hrs.</font>
 </b>\n\n\n

2. Introduction to Programming Tools for Data Science\n\n\n

2.1 Toolkits using Python: Matplotlib, NumPy, Scikit-learn, NLTK\n\n\n

2.2 Visualizing Data: Bar Charts, Line Charts, Scatterplots\n\n\n

2.3 Working with data: Reading Files, Scraping the Web, Using APIs (Example: Using the Twitter APIs), Cleaning and Munging, Manipulating Data, Rescaling, Dimensionality Reduction\n\n\n
 <b><font fgcolor='#F700FF'>
     Module 3 Lecture 12 hrs.</font></b>\n\n\n

3. Mathematical Foundations\n\n\n

3.1 Linear Algebra: Vectors, Matrices,\n\n\n

3.2 Statistics: Describing a Single Set of Data, Correlation, Simpson\'s Paradox, Correlation and Causation\n\n\n

3.3 Probability: Dependence and Independence, Conditional Probability, Bayes\'s Theorem, Random Variables, Continuous Distributions, The Normal Distribution, The Central Limit Theorem\n\n\n

3.4 Hypothesis and Inference: Statistical Hypothesis Testing, Confidence Intervals, Phacking, Bayesian Inference\n\n\n
 <b><font fgcolor='#F700FF'>
     Module 4 Lecture 16 hrs.</font></b>\n\n\n

 4. Machine Learning\n\n\n

Overview of Machine learning concepts Over fitting and train/test splits, Types of Machine Learning - Supervised, Unsupervised, Reinforced learning, Introduction to Bayes Theorem, Linear Regression- Model Assumptions, Regularization (lasso, ridge, elastic net), Classification and Regression algorithms- Naïve Bayes, K-Nearest Neighbors, logistic regression, support vector machines (SVM), decision trees, and random forest, Classification Errors, Analysis of Time Series- Linear Systems Analysis, Nonlinear Dynamics, Rule Induction, Neural Networks Learning And Generalization, Overview of Deep Learning.\n\n\n
 <b><font fgcolor='#F700FF'>
     Module 5 Lecture 6 hrs.</font></b>\n\n\n

5. Case Studies of Data Science Application Weather forecasting, Stock market prediction, Object recognition, Real Time Sentiment Analysis.\n\n\n
 <b><font fgcolor='#F700FF'>
     6. List of Practicals</font></b>\n\n\n

1. Write a programme in Python to predict the class of the flower based on available attributes.\n\n\n

2. Write a programme in Python to predict if a loan will get approved or not.\n\n\n

3. Write a programme in Python to predict the traffic on a new mode of transport.\n\n\n

    4. Write a programme in Python to predict the class of user.\n\n\n

5. Write a programme in Python to indentify the tweets which are hate tweets and which are not.\n\n\n

6. Write a programme in Python to predict the age of the actors.\n\n\n

7. Mini project to predict the time taken to solve a problem given the current status of the user.\n\n\n
 <b><font fgcolor='#F700FF'>
     Reference Books:</font></b>\n\n\n

1. Joel Grus, "Data Science from Scratch: First Principles with Python", O\'Reilly Media\n\n\n

2. Aurélien Géron, "Hands-On Machine Learning with Scikit-Learn and Tensor Flow: Concepts, Tools, and Techniques to Build Intelligent Systems", 1st Edition, O\'Reilly Media\n\n\n

3. Jain V.K., "Data Sciences", Khanna Publishing House, Delhi.\n\n\n

 4. Jain V.K., "Big Data and Hadoop", Khanna Publishing House, Delhi.\n\n\n

5. Jeeva Jose, "Machine Learning", Khanna Publishing House, Delhi.\n\n\n

6. Chopra Rajiv, "Machine Learning", Khanna Publishing House, Delhi.\n\n\n

7. lan Goodfellow, Yoshua Bengio and Aaron Courville, "Deep Learning", MIT Presshttp://www.deeplearningbook.org\n\n\n

8. Jiawei Han and Jian Pei, "Data Mining Concepts and Techniques", Third Edition, Morgan Kaufmann Publishers\n\n\n

</string>
<string name="csesem7ele2">Computational Complexity</string>
<string name="CCcse">\n\n\n
    <b><font fgcolor='#F700FF'>Detailed Contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Models of Computation, resources (time and space), algorithms, computability, complexity.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Complexity classes, P/NP/PSPACE, reductions, hardness, completeness, hierarchy, relationships between complexity classes.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Randomized computation and complexity; Logical characterizations, incompleteness; Approximability.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Circuit complexity, lower bounds; Parallel computation and complexity; Counting problems; Interactive proofs.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Probabilistically checkable proofs; Communication complexity: Quantum computation.\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:</font>
</b>\n\n\n

1. Christos H. Papadimitriou., Combinatorial Optimization: Algorithms and Complexity, Prentice-Hall.\n\n\n

2. Sanjeev Arora and Boaz Barak, Complexity Theory: A Modern Approach, Cambridge University Press\n\n\n

3. Steven Homer, Alan L. Selman, Computability and Complexity Theory, Springer\n\n\n
</string>

<string name="csesem7ele3">Advanced Computer Architecture</string>
<string name="ACAcse">\n\n\n

    <b><font fgcolor='#F700FF'> Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures: 8 hrs. </font></b>\n\n\nClasses of computers, Trends

in technology, power and costs, dependability, quantitative principles of es of computer design, Introduction to computing models.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures: 10 hrs. </font></b>\n\n\nPrinciples of scalable

performance, performance metrics and measures, speedup performance laws, advanced processor technology, super scalar and VLIW processors, Verified memory, cache memory organizations, shared memory organizations. Memory hierarchy, cache performance, protection and examples of virtual memory, cache coherence.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures: 8 hrs. </font></b>\n\n\nPipeline and superscalar

techniques, linear pipeline processors, reservation and latency analysis, collision free scheduling, pipeline schedule optimization, instruction pipeline design, arithmetic pipeline design, super scalar and super pipeline design.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures: 7 hrs. </font></b>\n\n\nMultiprocessors and

multi-computers, Brief overview of SIMD, MIMD, vector architectures and multi-core architectures.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lectures: 7 hrs. </font></b>\n\n\nElementary theory about

dependence analysis, techniques for extraction of parallelism, branch prediction, dynamic scheduling, multiple issue and speculation, limits on instruction level parallelism, Thread level parallelism\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:</font>
</b>\n\n\n

1. Computer Architecture: A Quantitative Approach: Hennessy and Patterson: Morgan Kaufmann\n\n\n

2. Advanced Computer Architecture, Kai Hwang, McGraw Hill\n\n\n

3. Advanced Computer Architectures: A design space approach, Sima D, Fountain T. and Kacsuk P, Pearson Education\n\n\n

</string>
<string name="csesem7ele4">Theory Of Computation </string>
<string name="TOCcse">\n\n\n

    <b><font fgcolor='#F700FF'>  Detailed contents</font></b>\n\n\n

Logic: First-order predicate calculus - syntax, semantics, validity and satisfiability, decision problems in logic, quantified Boolean formulas and their relation with the polynomial hierarchy.\n\n\n

Computability theory: Review of Turing machines, some

other computing models and formalisms, their equivalence with Turing machines, undecidability, Post correspondence problem, Turing computability, primitive recursive functions, Cantor and Goedel numbering, Ackermann function, mu-recursive functions, recursiveness of Ackermann and Turing computable functions, lambda calculus, term rewriting, oracle machines and the arithmetic hierarchy.\n\n\n

Complexity theory: Time- and space-bounded Turing

machines, reduction and complete problems, oracle machines and the polynomial hierarchy, randomized computation, parallel computation.\n\n\n
<b><font fgcolor='#F700FF'>
    Reference Books:\n\n\n</font></b>

1. Michael Sipser, Introduction to the Theory of Computation, PWS Publishing.\n\n\n

2. Fred C. Hennie. Introduction to Computability. Addison-Wesley.\n\n\n

3. Bernard M. Moret, The Theory of Computation, Pearson Education Asia.\n\n\n
    4. Christos H. Papadimitriou, Computational Complexity, Addison-Wesley Longman.\n\n\n

5. Dexter C. Kozen, Automata and Computability, Undergraduate Texts in Computer Science, Springer.\n\n\n

6. John Martin, Introduction to Languages and The Theory of Computation, Tata McGraw Hill.\n\n\n

7. John E. Hopcroft, Rajeev Motwani and Jeffrey D. Ullman, Introduction to Automata Theory, Languages, and Computation, Pearson Education Asia.\n\n\n

</string>

<string name="csesem7ele5">Internet Of Things</string>
    <string name="IOTcse">\n\n\n

        <b><font fgcolor='#F700FF'> Objectives of the Course:</font></b>\n\n\n

The objective of this course is to impart necessary and practical knowledge of components of Internet of Things and develop skills required to build real-life loT based projects.\n\n\n
        <b><font fgcolor='#F700FF'>Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 8 hrs.</font></b>\n\n\n

Introduction to IoT: Architectural Overview, Design principles and needed capabilities, IoT Applications, Sensing, Actuation, Basics of Networking, M2M and IoT Technology Fundamentals-Devices and gateways, Data management, Business processes in IoT, Everything as a Service (XaaS), Role of Cloud in IoT, Security aspects in IoT.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 9 hrs.</font></b>\n\n\n

Elements of loT: Hardware Components Computing (Arduino, Raspberry Pi), Communication, Sensing, Actuation, 1/0 interfaces. Software Components- Programming API\'s (using Python/Node.js/Arduino) for Communication. Protocols-MQTT, ZigBee, Bluetooth, CoAP, UDP, TCP.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures 18 hrs.</font></b>\n\n\n

IoT Application Development: Solution framework for loT applications- Implementation of Device integration, Data acquisition and integration, Device data storage- Unstructured data storage on cloud/local server, Authentication, authorization of devices.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 10 hrs.</font></b>\n\n\n

IoT Case Studies: loT case studies and mini projects based on Industrial automation, Transportation, Agriculture, Healthcare, Home Automation.\n\n\n
<b><font fgcolor='#F700FF'>
            List of Suggested Books:</font>
</b>\n\n\n

1. Vijay Madisetti, Arshdeep Bahga, Internet of Things, "A Hands on Approach", University Press\n\n\n

2. Dr. SRN Reddy, Rachit Thukral and Manasi Mishra, "Introduction to Internet of Things: A practical Approach", ETI Labs\n\n\n

3. Pethuru Raj and Anupama C. Raman, "The Internet of Things: Enabling Technologies, Platforms, and Use Cases", CRC Press\n\n\n

 4. Jeeva Jose, "Internet of Things", Khanna Publishing House, Delhi\n\n\n

5. Adrian McEwen, "Designing the Internet of Things", Wiley\n\n\n

6. Raj Kamal, "Internet of Things: Architecture and Design", McGraw Hill\n\n\n

7. Cuno Pfister, "Getting Started with the Internet of Things", O Reilly Media\n\n\n
<b><font fgcolor='#F700FF'>
    Learning Outcomes:\n\n\n</font></b>
<b>
After the completion of this course, the students will be able to:\n\n\n
</b>
1. Understand internet of Things and its hardware and software components\n\n\n

2. Interface I/O devices, sensors &amp; communication modules\n\n\n

3. Remotely monitor data and control devices\n\n\n

4. Develop real life loT based projects\n\n\n

    </string>
<string name="csesem7ele6">Natural Language Processing</string>
<string name="NLPcse">\n\n\n
    <b><font fgcolor='#F700FF'>   Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 6 hrs.</font></b>\n\n\n

Sound: Biology of Speech Processing; Place and Manner of Articulation; Word Boundary Detection; Argmax based computations; HMM and Speech Recognition.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 6 hrs.</font></b>\n\n\n

Words and Word Forms: Morphology fundamentals; Morphological Diversity of Indian Languages; Morphology Paradigms; Finite State Machine Based Morphology, Automatic Morphology Learning; Shallow Parsing; Named Entities; Maximum Entropy Models; Random Fields.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Structures: Theories of Parsing, Parsing Algorithms; Robust and Scalable Parsing on Noisy Text as in Web documents; Hybrid of Rule Based and Probabilistic Parsing, Scope Ambiguity and Attachment Ambiguity resolution.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 6 hrs.</font></b>\n\n\n

Meaning: Lexical Knowledge Networks, Wordnet Theory; Indian Language Wordnets and Multilingual Dictionaries; Semantic Roles; Word Sense Disambiguation; WSD and Multilinguality; Metaphors; Coreferences.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Web 2.0 Applications: Sentiment Analysis; Text Entailment,\n\n

Robust and Scalable Machine Translation; Question Answering in Multilingual Setting, Cross Lingual Information Retrieval (CLIR).\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:</font>
</b>
    \n\n\n

1. Jurafsky, Dan and Martin, James, "Speech and Language Processing", 2nd Edition, Prentice Hall, 2008\n\n\n

2. Manning, Christopher and Heinrich, Schutze, "Foundations of Statistical Natural Language Processing", MIT Press, 1999\n\n\n

3. Allen James, "Natural Language Understanding", 2nd edition, Benjamin Cumming, 1995\n\n\n

4. Charniack, Eugene, "Statistical Language Learning", MIT Press, 1993\n\n\n
</string>
<string name="csesem7ele7">E-commerce and ERP </string>
<string name="ECERPcse">\n\n\n

    <b><font fgcolor='#F700FF'> Module 1 Lecture: 10 hrs.</font></b>\n\n\n Introduction to E- Commerce: Evolution of E-commerce, Advantage and Disadvantage of E Commerce, Roadmap of E-Commerce in India. Business Models of E-Commerce: Model Based On Transaction Party: B2B, B2C, C2B, C2C.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lecture: 10 hrs.</font></b>\n\n\n E marketing: The scope of E-Marketing, Identifying Web Presence goals, Uniqueness of the web, Meeting the need of website visitors, Website Design Issues: Factors that make People Return to Your Site, Strategies for Website Development. Site Adhesion: Content, format and access: maintaining a Website, E- Advertising, E-Branding,\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lecture: 10 hrs. </font></b>\n\n\nE-Payment System: Digital Payment Requirement, Digital Token based E-Payment System, Electronic Cash, Smart card and Electronics payment system: Credit and Debit Card, Virtual Currency, Digital wallet, Risk of Electronics payment system, Digital Signature. E Security: Security On the Internet: Network and Website Security Risk: Denial-of-Service attack, Viruses, Unauthorized access to computer Network. Security Standards: Firewall, Cryptography, Key Management, Password Systems, Digital certificates, Digital signatures.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lecture: 10 hrs.</font></b>\n\n\n Enterprise Resource Planning (ERP): Introductory Concepts, Advantages &amp; disadvantages of ERP, ERP and Related Technologies: - Business Process Reengineering, Data Warehousing, Data Mining, Supply Chain Management. ERP Implementation: ERP Implementation Life Cycle-Implementation Methodology, Hidden Costs, Organizing Implementation - Contracts with Vendors, Consultants and Users, Project Management and Monitoring.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lecture: 7 hrs.</font></b>\n\n\n ERP Business Modules: Introduction to basic Modules of ERP System, Business Modules in an ERP Package- Finance - Manufacturing - Human Resource - Plant Maintenance - Materials Management Quality Management Sales and Distribution.\n\n\n

    <b><font fgcolor='#F700FF'>Case Study:\n\n\n</font></b>

    <b>Recent business issues on E-Commerce Perspective.</b>\n\n\n
<b><font fgcolor='#F700FF'>
        Text Books:\n\n\n</font>
</b>


1. Alexis Leon, "ERP Demystified", Tata McGraw Hill.\n\n\n

2. E-Commerce An Indian Perspective by P.T.Joseph, PHI\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books</font>
</b>\n\n\n

1. K.K. Bajaj, D. Nag "E-Commerce", 2nd Edition, McGraw-Hill Education, New Delhi.\n\n\n

2. Bhaskar Bharat, "Electronic Commerce-Technology and Application", McGraw-Hill Education, New Delhi.\n\n\n

3. Mary Sumner, "Enterprise Resource Planning", 2005, PHI Learning India Pvt. Ltd. /Pearson Education, New Delhi.\n\n\n

4. Chan, "E-Commerce fundamentals and Applications", Wiley India, New Delhi.\n\n\n

5. Vinod Kumar Garg and N.K.Venkata Krishnan, "Enterprise Resource Planning concepts and Planning", Prentice Hall, 1998.\n\n\n

</string>

<string name="csesem7ele8">Robotics And Robot Application</string>
<string name="RRAcse">\n\n\n

 <b><font fgcolor='#F700FF'>
     Objective of the Course:</font></b>\n\n\n
<b>
    The objective of this course is to impart knowledge about industrial robots for their control and design. Detailed contents</b>\n\n\n

    <b><font fgcolor='#F700FF'>Module 1 Lectures 3 hrs.</font></b>\n\n\n Introduction to Robotics: Types and components of a robot, Classification of robots, closed-loop and open loop control systems. Kinematics systems; Definition of mechanisms and manipulators, Social issues and safety.\n\n\n

    <b><font fgcolor='#F700FF'>Module 2 Lectures 7 hrs.</font></b> \n\n\nRobot Kinematics and Dynamics: Kinematic Modelling: Translation and Rotation Representation, Coordinate transformation, DH parameters, Jacobian, Singularity, and Statics. Dynamic Modelling: Equations of motion: Euler-Lagrange formulation.\n\n\n

    <b><font fgcolor='#F700FF'>Module 3 Lectures 10 hrs.</font></b>\n\n\n Sensors and Vision System: Sensor: Contact and Proximity, Position, Velocity, Force, Tactile etc., Introduction to Cameras, Camera calibration, Geometry of Image formation, Euclidean / Similarity/Affine / Projective transformations. Vision applications in robotics.\n\n\n

    <b><font fgcolor='#F700FF'>Module 4 Lectures 12 hrs.</font></b>\n\n\n Robot Control: Basics of control: Transfer functions, Control laws: P, PD, PID. Non-linear and advanced controls. Robot Actuation Systems: Actuators: Electric, Hydraulic and Pneumatic; Transmission: Gears, Timing Belts and Bearings, Parameters for selection of actuators.\n\n\n

    <b><font fgcolor='#F700FF'>Module 5 Lectures 10 hrs.</font></b>\n\n\n Control Hardware and Interfacing: Embedded systems: Architecture and integration with sensors, actuators, components, Programming for Robot Applications.\n\n\n
<b><font fgcolor='#F700FF'>
        List of Suggested Books:\n\n\n</font>
</b>

1. Saha, S. K., "Introduction to Robotics, 2nd Edition, McGraw-Hill Higher Education, New Delhi, 2014.\n\n\n

2. Ghosal, A., "Robotics", Oxford, New Delhi, 2006.\n\n\n

3. Niku Saeed B., "Introduction to Robotics: Analysis, Systems, Applications", PHI, New Delhi.\n\n\n

4. Mittal R.K. and Nagrath I.J., "Robotics and Control", Tata McGraw Hill.\n\n\n

5. Mukherjee S., "Robotics and Automation", Khanna Publishing House, Delhi. 6. Craig, J.J., "Introduction to Robotics: Mechanics and Control", Pearson, New Delhi, 2009\n\n\n

7. Mark W. Spong, Seth Hutchinson, and M. Vidyasagar, "Robot Modelling and Control", John Wiley and Sons Inc, 2005\n\n\n

 8. Steve Heath, "Embedded System Design", 2nd Edition, Newnes, Burlington, 2003\n\n\n

9. Merzouki R., Samantaray A.K., Phathak P.M. and Bouamama B. Ould, "Intelligent Mechatronic System: Modeling, Control and Diagnosis", Springer.\n\n\n
<b><font fgcolor='#F700FF'>
    Learning Outcomes:</font></b>\n\n\n
<b>
    After the completion of this course, the students will be able to:</b>\n\n\n
    1. Perform kinematic and dynamic analyses with simulation.\n\n\n


2. Design control laws for a robot.\n\n\n

3. Integrate mechanical and electrical hardware for a real prototype of robotic device.\n\n\n

4. Select a robotic system for given application.\n\n\n

</string>

    <string name="csesem8sub1">Project-II</string>
<string name="cseproject2">
    PROJECT-II
</string>



<string name="csesem8sub2">Open Elective-III</string>
<string name="csesem8sub3">Open Elective-IV</string>
<string name="csesem8sub4">Program Elective-IV</string>
<string name="csesem8sub5">Program Elective-V</string>


    <string name="csesem8ele1">VLSI System Design</string>
<string name="VLSIcse8">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 6 hrs.</font></b>\n\n\n

Introduction to VLSI design: Moore\'s Law; Scale of Integration; Types of VLSI Chips; Design principles (Digital VLSI); Design Domains(Y-Chart), Challenges of VLSI design- power, timing area, noise, testability reliability, and yield; CAD tools for VLSI design\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 7 hrs.</font></b>\n\n\n

Introduction to VLSI Technology: VLSI Technology - An Overview - Wafer Processing, Oxidation, Epitaxial Deposition, lon-implantation and Diffusion; The Silicon Gate Process- Basic CMOS Technology; basic n-well CMOS process, p-well CMOS process; Twin tub process, Silicon on insulator, CMOS process enhancement-Interconnect; circuit elements; 3-D CMOS\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures 7 hrs.</font></b>\n\n\n

Analysis of CMOS logic Circuits: MOSFET as Switch; Recapitulation of MOS; CMOS Inverter, CMOS logic circuits; NAND gate and NOR Gate; Complex logic circuits; Pass transistor logic; CMOS Transmission gate; CMOS full adder\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 4 hrs.</font></b>\n\n\n

Advanced Techniques in CMOS logic circuit: Pseudo nMOS; Tri-state; Clocked CMOS; Dynamic CMOS logic- Domino, NORA, Zipper, etc.; Dual rail logic networks\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lectures 2 hrs.</font>
</b>\n\n\n

Memories: Static RAM; SRAM arrays; Dynamic RAMS; ROM arrays; Logic arrays\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lectures 8 hrs.</font></b>\n\n\n

Timing issues in VLSI system design: Timing classification- synchronous timing basics, skew and jitter, latch based clocking, self-timed circuit design; self-timed logic; completion signal generation; self-timed signaling-synchronizers and arbiters\n\n\n
<b><font fgcolor='#F700FF'>
    Module 7 Lectures 6 hrs.</font></b>\n\n\n

Verilog Hardware Description language: Overview of digital design with Verilog HDL; Hierarchical modeling concepts; Modules and port definitions; Gate level modeling, Data flow modeling; Behavioral modeling; Task &amp; functions; Test bench\n\n\n
<b><font fgcolor='#F700FF'>
    Text Books:\n\n\n</font></b>

Neil H. E. Weste and Kamran Eshraghian, "Principles of CMOS VLSI Design", 2nd edition, Pearson Education Asia, 2000.\n\n\n

John P. Uyemura, "Introduction to VLSI Circuits and Systems", John Wiley and Sons, Inc., 2002.\n\n\n

Samir Palnitkar, "Verilog HDL", 2nd Edition, Pearson Education, 2004.\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:\n\n\n</font>
</b>\n\n\n

•Eugene D. Fabricius, "Introduction to VLSI Design", TMH International Editions, 1990.\n\n\n

Bhasker J., "A Verilog HDL Primer", 2nd Edition, B. S. Publications, 2001.\n\n\n

•Pucknell, "Basic VLSI Design", Prentice Hall of India Publication, 1995.\n\n\n

Wayne Wolf, "Modern VLSI Design System on chip", Pearson Education, 2002\n\n\n

</string>

<string name="csesem8ele2">Embedded System</string>
<string name="EScse8">\n\n\n
    <b><font fgcolor='#F700FF'> Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 10 hrs.</font></b>\n\n\n

Embedded Computing: Introduction, Complex systems and Microprocessors, The embedded system design process, Formalization for system design.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 10 hrs.</font></b>\n\n\n

Instruction Sets CPUs: Instruction and preliminaries ARM and SHARC Processors, Programming I/O CPU performance and Power consumption.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 10 hrs.</font></b>\n\n\n

The embedded Computing Platform and program design: Introduction, the CPU bus, Component interfacing, designing with microprocessors, development and debugging.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 10 hrs.</font></b>\n\n\n

Program Design and Analysis: Introduction program design, Assembly, Linking, Basic compilation techniques, and Analysis optimization of executive time.\n\n\n
<b><font fgcolor='#F700FF'>
        Text Book:</font>
</b>
    \n\n\n

•Wayner Wolf., "Computers as components - Principle of Embedded Computing System Design", Morgan Kaufmann/ Hercourt India Pvt. Ltd.\n\n\n
<b><font fgcolor='#F700FF'>
    Reference Books:</font></b>\n\n\n

•Raj Kamal - Embedded Systems, TMH, New Delhi 2004.\n\n\n

•F. Vahid&amp; T. givargis- Embedded system Design, John wiley, India Edition, 2005.\n\n\n

</string>
<string name="csesem8ele3">Digital Signal Processing</string>
<string name="DSPcse8">\n\n\n

<b><font fgcolor='#F700FF'>    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Introduction: Characterization and classification of signals, typical signal processing operations, Review of discrete-time signal and system analysis; Advantages and typical applications of DSP.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Sampling and Quantization: Sampling and discrete-time processing of continuous time signals, Sampling of low-pass and band-pass signals; Uniform and non-uniform quantization, Lloyd-Max algorithm, Log-companding, A-law, u-law; Adaptive quantization and prediction\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Orthogonal transforms: Properties and applications of DFT, implementing linear time invariant systems using DFT, circular convolution, linear convolution using DFT; Fast Fourier Transform, FFT algorithms: Decimation in time, decimation in frequency; Goertzel algorithm; Application of transform in speech, audio, image and video coding, Karhunen-Loeve Transform, DCT, JPEG and MPEG coding standards\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Digital Filter design techniques: IIR and FIR filters, filter design specifications; Design of digital IIR filters: Impulse invariant, and bilinear transformation techniques for Butterworth and Chebyshev filters; Design of FIR filters: Windowing, frequency sampling filter design, optimum approximations of FIR filters\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 6 hrs.</font></b>\n\n\n

Multi-rate Signal Processing: Fundamentals of multirate systems, Decimation and interpolation, application of Multirate DSP in sampling rate conversion; Filter banks; Polyphase structures; Quadrature-mirror filter bank; Wavelet transform and its relation to multi-rate filter banks; applications to speech and audio coding.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lecture 4 hrs.</font></b>\n\n\n

Basic concept of Adaptive Digital Signal Processing: Adaptive Wiener filter and LMS algorithm; Applications of adaptive filtering to echo cancellation and equalization.\n\n\n
<b><font fgcolor='#F700FF'>
        Text Books:</font>
</b>
    \n\n\n

•Digital Signal Processing-A Computer Based Approach, Mitra, S.K.,\n\n\n

•Discrete Time Signal Processing, Oppenheim, A.V. and Schafer, R.W. with Buck, J.R\n\n\n

•Digital Signal Processing: A Practical Approach, Ifeachor, E.C. and Jervis, B.W\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:\n\n\n</font>
</b>

•Digital Signal Processing: Principles, Algorithm and Applications, Proakis, J.G. and Manolakis, D.G\n\n\n

•Multirate Systems and Filter Banks, Vaidyanathan, P.P\n\n\n

</string>

    <string name="csesem8ele4">High Performance Computer</string>
<string name="HPCcse8">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 10 hrs.</font></b>\n\n\n

Introduction to parallel computing. Parallel processing terminology, Pipelining Vs Data parallelism, Control parallelism, Scalability, Control parallel approach, Data parallel approach, Data parallel approach with I/O Parallel reduction, Prefix sums, List ranking, Preorder tree traversal, Merging two sorted lists, Graph coloring, Reducing the number of processors, Problems defying fast solutions on PRAMS\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 10 hrs.</font></b>\n\n\n

Thread and process level parallel architectures: MIMD, multi-threaded architectures. Distributed and shared memory MIMD architectures.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures 8 hrs.</font></b>\n\n\n

Dynamic interconnection networks.\n\n\n

Mapping and scheduling: Mapping data to processors on processor arrays and multicomputers, Dynamic Load Balancing on multicomputers, Static scheduling on UMA multiprocessors, Deadlock.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lectures 12 hrs.</font></b>\n\n\n

Parallel programming and parallel algorithms: Programming models, parallel programming on multiprocessors and multicomputers. Parallel algorithm structure, analyzing parallel algorithm.\n\n\n

Elementary parallel algorithms, Matrix algorithms, sorting, Graph algorithms.\n\n\n
<b><font fgcolor='#F700FF'>
    Text Book:\n\n\n</font></b>

Quinn, Parallel computing theory and practice, Tata McGraw Hill.\n\n\n
    <b><font fgcolor='#F700FF'>Reference Books:\n\n\n</font></b>

Selim G. Akl, The Design and Analysis of Parallel Algorithms, PH International\n\n\n

Ghosh, Moona and Gupta, Foundations of parallel processing, Narosa\n\n\n

Mehdi R. Zargham, Computer Architectures single and parallel systems, PHI. publishing.\n\n\n

•Ed. Afonso Ferreira and Jose\' D. P. Rolin, Parallel Algorithms for irregular problems - State of the art, Kluwer Academic Publishers.\n\n\n

</string>

<string name="csesem8ele5">Introduction To Communication System</string>
<string name="ITCScse8">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 8 hrs.</font></b>\n\n\n

Introduction: Communication model, Transmission line, Data Communication Concepts, Data Transmission: Parallel Transmission, Serial Transmission, Asynchronous Transmission, Synchronous Transmission, Data Encoding, Non-Return to Zero (NRZ), Return to Zero (RZ), Modem Concept, Modem Operation\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 6 hrs.</font></b>\n\n\n

Basic signal processing operations in Digital communication:\n\n\n

Analog Pulse Modulation: Sampling theorem for base-band and pass-band signals, quadrature sampling of band pass signal Reconstruction of message from its samples, signal distortion in sampling\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures 8 hrs.</font></b>\n\n\n

Pulse Amplitude modulation: Modulation generation and demodulation, PAM/TDM system. Digital Pulse modulation: Quantization, PCM, DPCM, Delta modulation, Adaptive delta modulation-Design of typical systems and performance analysis.\n\n\n

Signal space concepts: Geometric structure of the signal space, vector representation, distance, norm and inner product, orthogonality, Gram-Schmidt orthogonalization procedure.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 8 hrs.</font></b>

Filtering and receivers: Matched filter receiver, Inter symbol interference, Pulse Shaping, Nyquist criterion for zero ISI, Eye diagram, Equalizer, Scrambling and descrambling, Review of Gaussian random process, Optimum threshold detection, Optimum Receiver for AWGN channel, Matched filter and Correlation receivers\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lectures 10 hrs.</font></b>\n\n\n

Decision Procedure: Maximum aposteriori probability detector- Maximum likelihood detector, Error probability performance of binary signaling.\n\n\n

 Digital Band Pass Modulation Schemes: ASK, FSK, PSK, MSK - Digital M-ary modulation schemes signal space representation.\n\n\n

Error in Communication: Detection of signals in Gaussian

noise - Coherent &amp; non-coherent detection - Differential modulation schemes - Error performance of binary and M-ary modulation schemes - Probability of error of binary DPSK. Performance of M-ary signaling schemes in AWGN channels - Power spectra of digitally modulated signals, Performance comparison of digital modulation schemes\n\n\n
<b><font fgcolor='#F700FF'>
    Text Books:\n\n\n</font></b>

Digital Communications, Simon Haykin John Wiley &amp; Sons, Indian edition\n\n\n

Modern Digital and Analog Communication Systems, fourth edition by B.P. Lathi and Zhi Ding, Oxford University Press\n\n\n

•Introduction to data communications and networking, Behrouz Forouzan\n\n\n
<b><font fgcolor='#F700FF'>
    Reference Books:\n\n\n</font></b>

•Fundamentals of Communication Systems by J Proakis and M Salehi\n\n\n

Signals and Systems, second edition, by A. Oppenheim and A. Willsky\n\n\n

</string>

<string name="csesem8ele6">AD-HOC and Sensor Network</string>
<string name="ADcse8">\n\n\n
<b><font fgcolor='#F700FF'>
    Objectives:</font></b>\n\n\n

Understand the design issues in Ad Hoc and Sensor Networks.\n\n\n

Learn the different types of MAC protocols.\n\n\n

•Be familiar with different types of Ad-hoc routing protocols.\n\n\n

Be expose to the TCP issues in Ad-hoc networks.\n\n\n

•Learn the architecture and protocols of wireless sensor networks.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents\n\n\n</font></b>
<b><font fgcolor='#F700FF'>
    Module 1: Introduction Lectures 8 hrs.</font></b>\n\n\n

Fundamentals of wireless communication technology - the electromagnetic spectrum - radio propagation mechanisms - characteristics of the wireless channel - Mobile Ad-hoc Networks (MANETS) and Wireless Sensor Networks (WSNs): concepts and architectures. Applications of Ad-hoc and sensor networks. Design challenges in Ad-hoc and sensor networks.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2: Mac Protocols for Ad-hoc Wireless Networks Lectures 8 hrs.\n\n\n</font></b>

Issues in designing a MAC Protocol- Classification of MAC Protocols- Contention based protocols Contention based protocols with Reservation Mechanisms- Contention based protocols with Scheduling Mechanisms - Multi channel MAC-IEEE 802.11\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3: Routing Protocols and Transport Layer in Ad-hoc Networks Lectures 8 hrs.\n\n\n</font></b>

Issues in designing a routing and Transport Layer protocol for Ad hoc networks- proactive routing, reactive routing (on-demand), hybrid routing- Classification of Transport Layer solutions-TCP over Ad hoc wireless Networks.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4: Wireless Sensor Networks (WSNs) And MAC Protocols Lectures 8 hrs.</font></b>\n\n\n

Single node architecture: hardware and software components of a sensor node - WSN Network architecture: typical network architectures-data relaying and aggregation strategies -MAC layer protocols: self-organizing, Hybrid TDMA/FDMA and CSMA based MAC- IEEE 802.15.4\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5: Security in Ad Hoc and Sensor Networks Lectures 8 hrs.\n\n\n</font>
</b>

Security Attacks - Key Distribution and Management - Intrusion Detection - Software based Anti-tamper techniques - Water marking techniques - Defense against routing attacks - Secure Ad hoc routing protocols - Broadcast authentication WSN protocols - TESLA - Biba Sensor Network Security Protocols SPINS\n\n\n
<b><font fgcolor='#F700FF'>
    Text Book:</font></b>\n\n\n

•C. Siva Ram Murthy and B.S.Manoj, -Ad Hoc Wireless Networks - Architectures and Protocols, Pearson Education, 2006.\n\n\n

Holger Karl and Andreas Willig, "Protocols and Architectures for Wireless Sensor Networks", Wiley, 2005\n\n\n
<b><font fgcolor='#F700FF'>
        References Book:\n\n\n</font>
</b>


•Carlos De Morais Cordeiro, Dharma Prakash Agrawal "Ad Hoc &amp; Sensor Networks: Theory and Applications", World Scientific Publishing Company, 2006.\n\n\n

•Feng Zhao and Leonides Guibas, "Wireless Sensor Networks", Elsevier Publication - 2002.\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcomes:\n\n\n</font></b>

Upon completion of the course, the student should be able to:\n\n\n

Identify different issues in wireless ad hoc and sensor networks.\n\n\n

•Analyze protocols developed for ad hoc and sensor networks.\n\n\n

Identify and understand security issues in ad hoc and sensor networks.
\n\n\n
</string>


<string name="csesem8pro1">Data Mining</string>
    <string name="DMcse8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed Contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Data Warehousing and Business Analysis: - Data warehousing Components-Building a Data warehouse -Data Warehouse Architecture - DBMS Schemas for Decision Support - Data Extraction, Cleanup, and Transformation Tools -Metadata reporting - Query tools and Applications - Online Analytical Processing (OLAP) - OLAP and Multidimensional Data Analysis.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Data Mining: Data Mining Functionalities - Data Preprocessing Data Cleaning Data Integration and Transformation - Data Reduction - Data Discretization and Concept Hierarchy Generation- Architecture Of A Typical Data Mining Systems- Classification Of Data Mining Systems.\n\n\n

Association Rule Mining: Efficient and Scalable Frequent Item set Mining Methods - Mining Various Kinds of Association Rules - Association Mining to Correlation Analysis - Constraint-Based Association Mining.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Classification and Prediction: - Issues Regarding Classification and Prediction - Classification by Decision Tree Introduction - Bayesian Classification - Rule Based Classification - Classification by Back propagation - Support Vector Machines Associative Classification - Lazy Learners - Other Classification Methods Prediction Accuracy and Error Measures - Evaluating the Accuracy of a Classifier or Predictor - Ensemble Methods - Model Section.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Cluster Analysis: Types of Data in Cluster Analysis - A Categorization of Major Clustering Methods - Partitioning Methods Hierarchical methods - Density-Based Methods - Grid-Based Methods - Model-Based Clustering Methods - Clustering High-Dimensional Data Constraint-Based Cluster Analysis - Outlier Analysis.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5

Lecture 8 hrs.</font></b>\n\n\n

Mining Object, Spatial, Multimedia, Text and Web Data: Multidimensional Analysis and Descriptive Mining of Complex Data Objects - Spatial Data Mining - Multimedia Data Mining - Text Mining Mining the World Wide Web.\n\n\n
<b><font fgcolor='#F700FF'>
    Text Book</font></b>\n\n\n

Jiawei Han, MichelineKamber and Jian Pei, "Data Mining Concepts and Techniques", Third Edition, Elsevier, 2011.\n\n\n
<b><font fgcolor='#F700FF'>
            Reference Books</font>
</b>\n\n\n

•Alex Berson and Stephen J. Smith "Data Warehousing, Data Mining &amp;OLAP", Tata McGraw-Hill Edition, Tenth Reprint 2007.\n\n\n

•P. Soman, ShyamDiwakar and V. Ajay "Insight into Data mining Theory and Practice", Easter Economy Edition, Prentice Hall of India, 2006.\n\n\n

•K. Gupta "Introduction to Data Mining with Case Studies", Easter Economy Edition, Prentice Hall of India, 2006.\n\n\n

Pang-Ning Tan, Michael Steinbach and Vipin Kumar "Introduction to Data Mining", Pearson Education, 2007.\n\n\n
    </string>
<string name="csesem8pro2">Computational Number Theory</string>
<string name="CNT8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed Contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
Module 1

    Lecture 8 hrs.</font></b>\n\n\n

Algorithms for integer arithmetic: Divisibility, GCD Computation: Euclid\'s Algorithm, Extended Euclid\'s Algorithm, modular arithmetic, modular exponentiation, Montgomery arithmetic, congruence, Chinese remainder theorem, Hensel lifting, orders and primitive roots, quadratic residues, integer and modular square roots, prime number theorem, continued fractions and rational approximations.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Representation of finite fields: Prime and extension fields, representation of extension fields, polynomial basis, primitive elements, normal basis, optimal normal basis, irreducible polynomials.\n\n\n

Algorithms for polynomials: Root-finding and factorization, Lenstra-Lenstra-Lovasz algorithm, polynomials over finite fields,\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lecture 6 hrs.</font></b>\n\n\n

Elliptic curves: The elliptic curve group, elliptic curves over finite fields, Schoof\'s point counting algorithm.\n\n\n
<b><font fgcolor='#F700FF'>
Module 4

    Lecture 8 hrs.</font></b>\n\n\n

Primality testing algorithms: Fermat test, Miller-Rabin test, Solovay-Strassen test, AKS test.\n\n\n

Integer factoring algorithms: Trial division, Pollard rho method, p-1 method, CFRAC method, quadratic sieve method, elliptic curve method.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Computing discrete logarithms over finite fields: Baby-step-giant-step method, Pollard rho method, Pohlig-Hellman method, index calculus methods, linear sieve method, Coppersmith\'s algorithm.\n\n\n

Applications: Algebraic coding theory, cryptography.\n\n\n
<b><font fgcolor='#F700FF'>
    Reference Books:\n\n\n</font></b>

Shoup, A computational introduction to number theory and algebra, Cambridge University Press.\n\n\n

Mignotte, Mathematics for computer algebra, Springer-Verlag.\n\n\n

Niven, H. S. Zuckerman and H. L. Montgomery, An introduction to the theory of numbers, John Wiley.\n\n\n

•von zur Gathen and J. Gerhard, Modern computer algebra, Cambridge University Press.\n\n\n

•Lidl and H. Niederreiter, Introduction to finite fields and their applications, Cambridge University Press.\n\n\n

J. Menezes, editor, Applications of finite fields, Kluwer Academic Publishers.\n\n\n

•H. Silverman and J. Tate, Rational points on elliptic curves, Springer International Edition.\n\n\n

R. Hankerson, A. J. Menezes and S. A. Vanstone, Guide to elliptic curve cryptography, Springer-Verlag.\n\n\n

Das and C. E. Veni Madhavan, Public-key cryptography: Theory and practice, Pearson Education Asia.\n\n\n

•Cohen, A course in computational algebraic number theory, Springer-Verlag.\n\n\n

</string>

<string name="csesem8pro3">Advanced Operating System</string>
<string name="AOS8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Objectives of the course</font></b>\n\n\n

The objective of this course is to impart necessary and practical knowledge to identify and solve problems in distributed, multiprocessor and database operating systems.\n\n\n
<b><font fgcolor='#F700FF'>
    Detail contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 6 hrs.</font></b>\n\n\n

Introduction to Advance Operating System: Comparative study of OS; LINUX, Linux File System + Measurements, The Log Structured File System, Server less Network File Systems, The Coda File System, AFS, Virtual Memory, Stack/Buffer Overflow, Address Space Layout Randomization (ASLR) User-Level Virtual Memory, Global Network Scheduling, Network Optimization, Extensible Operating Systems, Issues of Security in OS, Cryptographic file systems.\n\n\n
<b><font fgcolor='#F700FF'>
Module 2

    Lecture 6 hrs.</font></b>\n\n\n

Distributed Operating Systems: System Architecture Types, Issues in Distributed Operating Systems: Naming, Scalability, Security, Client-Server Model, Process Synchronization, Global Knowledge, etc. RPC, Message Passing. Absence of Global Lock, Absence of Shared Memory, lamport\'s logical clock, Chandy Lamport\'s Algorithm, Termination Detection, Distributed Mutual Exclusion, Non Token Based Algorithms, Ricart Agarwala algorithm, Lamport\'s Algorithm, Generalized Non-Token Based Algorithm, Comparative performance Analysis\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 6 hrs.</font></b>\n\n\n

Synchronization: Clock synchronization, Event ordering, Mutual exclusion, Deadlock, Election algorithms, Desirable features of good global scheduling algorithms, Task assignment approach, Load balancing approach, Load sharing approach, Process management: Process migration, Threads Distributed Deadlock Detection, Centralized/Distributed/ Hierarchical control, Path

Pushing Algorithm, Edge-Chasing Algorithm, Ho-Ramamoorthy Algorithms.\n\n\n




<b><font fgcolor='#F700FF'>Module 4 Lecture 6 hrs.</font></b>\n\n\n

Resource Management in Distributed Systems: Distributed File Systems: Mounting, Caching, Bulk Data Transfer, Design Issues, Cache Consistency, Scalability, Log Structured File systems; Distributed Shared Memory: Central-Server Algorithm, Full-Replication Algorithm, etc. Coherence Protocols, Granularity, Page Replacement, Distributed Scheduling: Load, Classification, Load Balancing and Load Sharing, Policies for Transfer, Selection, Location, Information, Stability, Load Balancing Algorithms, Load Sharing Case Studies.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 6 hrs.</font></b>\n\n\n

Fault Tolerance, Recovery, Protection and Security: Atomic Actions and Commit, Commit Protocols, Voting Protocols, Dynamic Voting, Classification of Failures, Backward and Forward Error Recovery, Synchronous/Asynchronous Checkpoints and Recovery, Recovery in Concurrent Systems, Access Matrix Model, Advanced Models of Protection, Cryptography.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lecture 6 hrs.</font></b>\n\n\n

Multiprocessor and Database Operating Systems: Tightly and Loosely Coupled systems, Interconnect networks, Caching, Hypercube architectures, Threads, Process Synchronization in MP systems, Process Scheduling in MP systems, Requirements of Database OS, Transactions, Conflicts, Serializability Theory, Distributed Database Systems, Concurrency control Algorithms, Lock Based Algorithms, Timestamp Based Algorithms, 2PL.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 7 Lecture 6 hrs.</font></b>\n\n\n

Virtualization: Introduction; Simulation, Emulation, Para-Virtualization, Full virtualization; x86 Virtualization: privileged instructions, control sensitive instructions, Trap and Emulate, Binary translation, x86 hardware virtualization vmxon/vmxoff, vmentry, vm exit;, Intel VTd, VMCS, Shadow page tables, EPT/NPT.\n\n\n
<b><font fgcolor='#F700FF'>
        Suggested books:</font>
</b>\n\n\n

•Pradeep K. Sinha, "Distributed Operating Systems: Concepts and Design", Wiley.\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcomes</font></b>\n\n\n

Students should be able to:\n\n\n

Identify and solve problems in distributed, multiprocessor and database operating systems.\n\n\n

Explain the architectural features and solutions for implementing various virtualization features in operating systems.\n\n\n

•Solve synchronization problems involving distributed and virtualized environments.\n\n\n

</string>

<string name="csesem8pro4">Genetic Algorithm</string>
<string name="GA8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Detail contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Introduction to Genetic Algorithm, Genetic Algorithms, Traditional and Search Methods and their Differences, A Simple Genetic Algorithm.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Genetic Algorithms Revisited: The Fundamental Theorem, Schema Processing.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Two &amp; k-Armed Bandit Problem, Hypothesis, Schemata and Revisited.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Computer Implementation of A Genetic Algorithm: Data Structures, Reproduction,\n\n\n

Crossover and Mutation, A Time to Reproduce, A Time to Cross, How Well Does It Work, Mapping Objective Functions to Fitness Form, Fitness Scaling, Coding, A Multiparameter Mapped, Fixed-Point Coding, Discretization, Constraints.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Applications of Genetic Algorithms: The Rise of Genetic Algorithms, Genetic Algorithm Applications of Historical Interest, De Jong and Function Optimization, Improvements in Basic Technique, Current Applications of Genetic Algorithms. Genetics-Based Machine Learning, Whence It Came, What is Classifier System, Rule and Message, Genetic Algorithm.\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Books:\n\n\n</font>
</b>

•D.E. Goldberg-Genetic Algorithms in Search Optimization and Machine Learning, Pearson Education, New Delhi, 2005.\n\n\n

2. M. D. Vose The Simple Genetic Algorithm, PHI, New Delhi, 2004\n\n\n
</string>

    <string name="csesem8pro5">Cloud Computing</string>
    <string name="cc8pro">\n\n\n
   <b><font fgcolor='#F700FF'>
       Objective:</font></b>\n\n\n This course will cover the study of various cloud services, deployment model, resource provisioning and scheduling algorithms involved in better implementing the cloud-based systems.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 4 hrs.</font></b>\n\n\n

Introduction: Distributed Computing and Enabling

Technologies, Cloud Fundamentals: Cloud Definition, Evolution, Architecture, Applications, deployment models, and service models.\n\n\n
<b><font fgcolor='#F700FF'>
Module 2

    Lecture 5 hrs.</font></b>\n\n\n

Virtualization: Issues with virtualization, virtualization technologies and architectures, Internals of virtual machine monitors/hypervisors, virtualization of data centers, and Issues with Multi-tenancy.\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lecture 6 hrs.</font></b>\n\n\n

Implementation: Study of Cloud computing Systems like

Amazon EC2 and S3, Google App Engine, and Microsoft Azure, Build Private/Hybrid Cloud using open source tools, SLA management.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 12 hrs.</font></b>\n\n\n

Resource Management: Cloud resource provisioning plan (advance reservation, on demand plan, spot instances), various scheduling and load balancing techniques to improve QoS parameters, Resource Optimization algorithms, task migration and VM migration technique.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 7 hrs.</font></b>\n\n\n

Security: Vulnerability Issues and Security Threats, Application-level Security, Data level Security, and Virtual Machine level Security, Infrastructure Security, and Multi-tenancy Issues.\n\n\n
<b><font fgcolor='#F700FF'>
 Module 6

    Lecture 6 hrs.</font></b>\n\n\n

Advances: Green Cloud, Mobile Cloud Computing, Fog Computing, Internet of Things\n\n\n
<b><font fgcolor='#F700FF'>
Suggested Books:
        </font>
</b>\n\n\n

•Cloud Computing Principles and Paradigms, Rajkumar Buyya, James Broberg, Andrzej Goscinski, Wiley Publishers 2011\n\n\n

•Cloud Computing Bible, Barrie Sosinsky, Wiley Publishers 2010\n\n\n

•Mastering Cloud computing, Rajkumar Buyya, Christian Vacchiola, S Thamarai Selvi, McGraw Hill 2013\n\n\n

•Cloud Security and Privacy: An Enterprise Perspective on Risks and Compliance, Tim Mather, Subra Kumaraswamy, Shahed Latif, O\'Reilly 2010\n\n\n

•Cloud Computing by Shailendra Singh 2018\n\n\n
<b><font fgcolor='#F700FF'>
    Course outcomes:\n\n\n</font></b>

Articulate the main concepts, key technologies, strengths, and limitations of cloud computing and the possible applications for state-of-the-art cloud computing\n\n\n

Identify the architecture and infrastructure of cloud computing, including SaaS, PaaS, laaS, public cloud, private cloud, hybrid cloud, etc.\n\n\n

Identify problems, and explain, analyze, and evaluate various cloud computing solutions\n\n\n

•Provide the appropriate cloud computing solutions and recommendations according to the applications used.\n\n\n

•Attempt to generate new ideas and innovations in cloud computing\n\n\n

    </string>

<string name="csesem8pro6">Quantum Computing</string>
<string name="QC8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Objective of the Course:</font></b>\n\n\n

The objective of this course is to impart necessary knowledge to the learner so that he/she can develop and implement algorithm and write programs using these algorithm.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
Lectures 6 hrs.

    Module 1</font></b>\n\n\n

Introduction to Quantum Computing: Motivation for studying Quantum Computing, Major players in the industry (IBM, Microsoft, Rigetti, D-Wave etc.), Origin of Quantum Computing.\n\n\n

Overview of major concepts in Quantum Computing, Qubits and multi-qubits states, Bra-ket notation, Bloch Sphere representation, Quantum Superposition, Quantum Entanglement,\n\n\n
<b><font fgcolor='#F700FF'>
Module 2

    Lectures 9 hrs.</font></b>\n\n\n

Math Foundation for Quantum Computing: Matrix Algebra: basis vectors and orthogonality, inner product and Hilbert spaces, matrices and tensors, unitary operators and projectors, Dirac notation, Eigen values and Eigen vectors.\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lectures 8 hrs.</font></b>\n\n\n

Building Blocks for Quantum Program: Architecture of a Quantum Computing platform.\n\n\n

Details of q-bit system of information representation: Block Sphere, Multi-qubits States, Quantum superposition of qubits (valid and invalid superposition), Quantum Entanglement, Useful states from quantum algorithmic perceptive e.g. Bell State, Operation on qubits: Measuring and transforming using gates, Quantum Logic gates and Circuit: Pauli, Hadamard, phase shift, controlled gates, Ising, Deutsch, swap etc.\n\n\n

Programming model for a Quantum Computing Program: Steps performed on classical computer, Steps performed on Quantum Computer, Moving data between bits and qubits.\n\n\n
<b><font fgcolor='#F700FF'>
 Module 4

    Lectures 18 hrs.</font></b>\n\n\n

Quantum Algorithms: Basic techniques exploited by quantum

algorithms, Amplitude amplification, Quantum Fourier Transform, Phase Kick-back, Quantum Phase estimation, Quantum Walks.\n\n\n

Major Algorithms: Shor\'s Algorithm, Grover\'s Algorithm, Deutsch\'s Algorithm, Deutsch - Jozsa Algorithm.\n\n\n

OSS Toolkits for implementing Quantum program: IBM quantum experience, Microsoft Q, Rigetti PyQuil (QPU/QVM).\n\n\n
<b><font fgcolor='#F700FF'>
    List of Suggested Books:</font></b>\n\n\n

Michael A. Nielsen, "Quantum Computation and Quantum Information", Cambridge University Press.\n\n\n

•David McMahon, "Quantum Computing Explained", Wiley

IBM Experience: https://quantumexperience,ng,bluemix.net\n\n\n

•Microsoft Quantum Development Kit\n\n\n

•https://www.microsoft.com/en-us/quantum/development-kit\n\n\n

•Forest SDK PyQuil: https://pyquil.readthedocs.io/en/stable/\n\n\n
<b><font fgcolor='#F700FF'>
Learning Outcomes:\n\n\n
</font></b>\n\n\n
At the end of this course, the students will be able to:\n\n\n

Explain the working of a Quantum Computing program, its architecture and program Model\n\n\n

•Develop quantum logic gate circuits\n\n\n

•Develop quantum algorithm\n\n\n

•Program quantum algorithm on major toolkits\n\n\n

</string>

<string name="csesem8pro7">Transaction Processing System</string>
<string name="TPS8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed Contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Consistency, Atomicity, Durability, Isolation, Flat Transactions, Providing Structure within a Transaction, Structuring an Application as Multiple Transactions.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Schedules and Schedule Equivalence, Recoverability, Cascaded Aborts and Strictness, Models for Concurrency Control, A Strategy for Immediate-Update Pessimistic Concurrency Controls, Design of an Immediate-Update Pessimistic Concurrency Control, Objects and Semantic Commutativity, Atomicity, Recoverability and Compensating Operations, Locking and SQL Isolation Levels, Granular Locking: Intention Locks and Index Locks, Tuning Transactions, Multi version Concurrency Controls.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Crash, Abort and Media Failure, Immediate-Update Systems and Write-Ahead Logs, Recovery in Deferred-Update Systems, Recovery from Media Failure.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Transaction Processing in a Centralized System, Transaction Processing in a Distributed System, Global Atomicity and the Transaction Manager, Remote Procedure Call, Pear-to-Pear Communication, Event Communication, Storage Architectures, Transaction Processing on the Internet, Implementing the ACID Properties, Distributed Deadlock, Global Serialization.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Authentication, Authorization and Encryption, Digital Signatures, Key Distribution and Authentication, Authorization, Authenticated RPC, Electronic Commerce, Certificates, Passport: SSO, SET Protocol: Dual Signatures, Goods Atomicity, Certified Delivery, and Escrow.\n\n\n
<b><font fgcolor='#F700FF'>
    Text Books</font></b>\n\n\n

Michael Kifer, Arthur Bernstein and Philip M. Lewis, "Database Systems: An Application-Oriented Approach", Addison Wesley, 2006\n\n\n

Philip A. Bernstein and Eric Newcomer, "Principles of Transaction Processing", 2nd Edition, Morgan Kaufmann Publishers, Elsevier, 2009\n\n\n

</string>
<string name="csesem8pro8">Pattern Recognition</string>
<string name="PR8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 6 hrs.</font></b>\n\n\n

Introduction: Importance of pattern recognition, Features, Feature Vectors, and Classifiers, Supervised Versus Unsupervised Pattern Recognition.\n\n\n
<b><font fgcolor='#F700FF'>
Module 2

    Lecture 6 hrs.</font></b>\n\n\n

Bayes Decision Theory: Discriminant Functions and Services o the Normal Distribution, Bayesian Classification, Estimating Probability Density Functions, Nearest Neighbour Rules Bayesian Networks\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lecture 6 hrs.</font></b>\n\n\n

Linear and Nonlinear Classifiers: The Perceptron Algorithm, Least-Squares Methods, Nonlinear Classifiers, Multilayer Perceptron\'s, Back Propagation Algorithm, Decision Trees, combinations of Classifiers, Boosting\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 6 hrs.</font></b>\n\n\n

Feature Selection: Data Pre-processing, ROC Curves, Class Separability Measures, Feature Subset Selection, Bayesian Information Criterion\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 6 hrs.</font></b>\n\n\n

Dimensionality Reduction: Basis Vectors, Singular Value Decomposition, Independent Component Analysis, Kernel PCA, Wavelets\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lecture 6 hrs.</font></b>\n\n\n

Additional Features And Template Matching: Texture, Shape and Size Characterization, Fractals, Features For Audio, Template Matching Using Dynamic Time Warping and Edit Distance, Context Dependent Classification\n\n\n
<b><font fgcolor='#F700FF'>
Module 7

    Lecture 6 hrs.</font></b>\n\n\n

Clustering: Sequential Algorithms, Hierarchical Algorithms Functional Optimization-Based Clustering Graph Clustering, Learning Clustering Clustering High Dimensional Data Subspace Clustering, Cluster Validity Measure.\n\n\n
<b><font fgcolor='#F700FF'>
        Text Books</font>
</b>\n\n\n

•Pattern recognition, Sergios Theodoridis\n\n\n

•Pattern classification, second edition, duda, hart and stork,wileyn\n\n\n

•Pattern recognition, Sergios Theodoridis Konstanti Nos Koutrou M Bas\n\n\n
<b><font fgcolor='#F700FF'>
Reference Books
</font></b>\n\n\n
Introduction to Statistical Pattern Recognition, Fukunaga Academic Press\n\n\n

•Pattern Recognition and Machine learning, C. M. Bishop, Springer\n\n\n

Statistical Methods in Bioinformatics, Ewens &amp; Grant, Springer\n\n\n

•The Elements of Statistical Learning, Hastie, Tibshirani, Friedman, Springer\n\n\n

</string>

<string name="csesem8pro9">Deep Learning</string>
<string name="DL8pro">\n\n\n<b><font fgcolor='#F700FF'>
    Objectives of the course:</font></b>\n\n\n

This course will provide a basic understanding of deep learning and their applications to solve real world problems. Open source tools will be used to demonstrate different applications.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
Module 1: Introduction

    Lecture 4 hrs.</font></b>\n\n\n

Brief introduction of big data problem. Overview of linear algebra, probability, numerical computation. Basics of Machine learning/Feature engineering.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2: Basics of Neural networks Lecture 4 hrs.</font></b>\n\n\n

Neural networks, Tools for Deep learning network - Shallow vs Deep network.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3: Feed forward Networks Lecture 6 hrs.</font></b>\n\n\n

Multilayer Perceptron, Gradient, Loss Function, Gradient Descent, Stochastic Gradient Descent (SDD), Backpropagation algorithm, Empirical Risk Minimization, regularization, Gradient based learning - Cost function, learning rate, soft max, sigmoid function, Hidden unit - ReLU, Logistic sigmoid, hyperbolic tangent Architecture design, Heuristics for faster training.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4: Unsupervised learning Lecture 10 hrs.</font></b>\n\n\n

Deep Belief Network, Deep Boltzmann Machine (DBM), Factor analysis, Auto-encoders (standard, sparse, denoising, contractive, etc), Variational Auto-encoders, Adversarial Generative Networks, Auto-encoder, Regularization Optimization for training deep model.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5: Advanced topics Lecture 10 hrs.</font></b>\n\n\n

Convolutional Neural Network (CNN): Architectures, convolution/pooling layers. Recurrent Neural Network (RNN)/ Sequence modeling: Long Short Term Memory networks (LSTM), GRU, Encoder Decoder architectures Reinforcement learning.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6: Practical applications Lecture 6 hrs.</font></b>\n\n\n

Application of Deep Learning to Computer Vision, Speech Recognition, Natural Language Processing, etc\n\n\n
<b><font fgcolor='#F700FF'>
        Suggested books:</font>
</b>\n\n\n

•lan Goodfellow, Yoshua Bengio and Aaron Courville, "Deep Learning", Book in preparation for MIT Press, 2016.\n\n\n

Jerome H. Friedman, Robert Tibshirani, and Trevor Hastie, "The elements of statistical learning", Springer Series in Statistics, 2009.\n\n\n

•Charu C Aggarwal, "Neural Networks and Deep Learning", Springer.\n\n\n
<b><font fgcolor='#F700FF'>
    Learning Outcomes\n\n\n</font></b>

Identify the deep learning algorithms which are more appropriate for various types of learning tasks in various domains.\n\n\n

Implement deep learning algorithms and solve real-world problems.\n\n\n

</string>

<string name="csesem8pro10">Computational Geometry</string>
<string name="CG8pro">\n\n\n<b><font fgcolor='#F700FF'>
    Objective:</font></b>\n\n\n To introduce geometric algorithms and to give an exposure to algorithms and data structures for geometric problems.\n\n\n
<b><font fgcolor='#F700FF'>
    Detail contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
Module 1 Lecture 6

    hrs.</font></b>\n\n\n

Polygon Triangulation: Triangulation Theory, Area of Polygon, Segment intersection, Segment-triangle intersection\n\n\n

Polygon Partitioning: Monotone Partitioning, Trapezoidalization, Partition into Monotone Mountains, Linear-Time Triangulation, Convex Partitioning.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 5 hrs.</font></b>\n\n\n

Convex Hulls in Two Dimensions: Definitions of Convexity and Convex Hulis, Naive Algorithms for Extreme Points, Gift Wrapping, QuickHull, Graham\'s Algorithm, Lower Bound. Incremental Algorithm, Divide and Conquer\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 6 hrs.</font></b>\n\n\n

Convex Hulls in Three Dimensions: Polyhedra and data structures, Gift wrapping, Preparata-Hong algorithm, Incremental algorithm, Randomized incremental algorithm\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 6 hrs.</font></b>\n\n\n

Voronoi Diagrams: Definitions and Basic Properties, Delaunay Triangulations, Algorithms, Applications in Detail, Medial Axis, Connection to Convex Hulls, Connection to Arrangements.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 6 hrs.</font></b>\n\n\n

Arrangements: Combinatorics of Arrangements, Incremental Algorithm, Three and Higher Dimensions, Duality, Higher-Order Voronoi, Diagrams, Applications.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lecture 8 hrs..</font></b>\n\n\n

Search and Intersection: Segment-Segment Intersection, Segment- Triangle Intersection, Point in Polygon, Point in Polyhedron, Intersection of Convex Polygons, Intersection of Segments, Intersection of Nonconvex Polygons, Extreme Point of Convex Polygon, Extremal Polytope, Queries, Planar Point

Location\n\n\n
<b><font fgcolor='#F700FF'>
    Module 7 Lecture 5 hrs.</font></b>\n\n\n

Motion Planning: Shortest Paths, Moving a Disk, Translating a Convex Polygon, Moving a Ladder, Robot Arm Motion, Separability.\n\n\n
<b><font fgcolor='#F700FF'>
    Suggested Books:</font></b>\n\n\n

M. de Berg, M van Kreveld, M. Overmars, O. Schwarzkopf, Computational Geometry: Algorithms and Applications (2nd Edition), Springer-Verlag 2000\n\n\n

O\'Rourke, Computational Geometry in G, 2nd ed., Cambridge Univ. Press, 1998.\n\n\n

Casselman, Mathematical Illustrations: A Manual of Geometry and PostScript, Springer-Verlag.. (http://www.math.ubc.ca/ -cass/graphics/manual) 2005\n\n\n

Mulmuley, Computational Geometry: An Introduction Through Randomized Algorithms, Prentice Hall. 1994\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcome</font></b>\n\n\n

Upon successful completion of this course, students will be able to:\n\n\n

Analyze randomized algorithms for small domain problems\n\n\n

Use line-point duality to develop efficient algorithms.\n\n\n

Apply geometric techniques to real-world problems in

graphics.\n\n\n

Solve linear programs geometrically.\n\n\n

</string>
<string name="csesem8pro11">Big Data Analytics</string>
<string name="BGA8pro">\n\n\n<b><font fgcolor='#F700FF'>
    Course Objectives:</font></b>\n\n\n

To understand and the compe it ve adramages of big data analytics\n\n\n

To understand the big data frameworks\n\n\n

To loom data analysiec methods\n\n\n

To leam stream computing\n\n\n

To gain knowledige ont ladoop related too\'s such as Base, Cassandra, Pig, and Hive for big cata analytics\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents\n\n\n</font></b>
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 7 hrs.</font></b>\n\n\n

Introduction to Big Data Definite on, Characteristic i eatures, Big Data Appl cat ons. Big Dara vs Trad tional Data. Risks of Big Data, Structure of Big Data, Challenges el Conventional Systems, Web Data, valirion of Analytic Scalable Evolution of Analytic Prac Processes and methoce, Aayis v Reporting, Mocerm Data Analytic Tools.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 9 hm.</font></b>\n\n\n

HADOOP Framework: Distributed File Systems, Large Scale File System, Organization - HDFS συιουμίν - Map Reduce Cricut on, Algorithms using Wap Reduce, Matroxo Multiplicatio Hacoop YARN\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 10 hrs.</font></b>\n\n\n

Data Analysis: Stassical Methods: Hegression mode ling, Multivariate Anelyais Classification: SVM &amp; Kernel Mechoos Rue Mining Chester Analyulu, Types of Data in Clue Analyse, Partition og Methods, Hierarchical Methods, Density Estec Methods, Grid sased Methods. Model lased Clustering Methoda, Clustering High Dimensional Data Precictive Anulytics-Dulu unutyuio using R\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 7 hrs.</font></b>\n\n\n

Mining Data Streams: Streams: Concepta Sircam Deta Mode and Atecture-Sampling data in a stream Mining Data Streams and Mining lime-series data-Heal Time Analytics Patform (RTA) Applications Case Studies Real Time Sentiment Analysis, Stock Market Predicions\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 9 hrs.</font></b>\n\n\n

Big Data Frameworks: in roduction ic NoSQL-Agurveste Data Models base: Data Model and Implementations Hbase Clients Examples Cassandra Data Mocel Exemples - Cassandra Clients - Hadoco Integration Pig- Grund-Pig Data Model-Pig Latin-developing and testing Pij afinseres ve Data Types and File Farmacsvet Data Definition Hive Jata Manipulat on Hive Queries\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcomes.</font></b>\n\n\n

At the end of this course, the studenta wiil be able to\n\n\n

Unverstand how to leverage she insights from big daa analylies\n\n\n

Analyze data by utilizing vericus statistical and data mining approaches\n\n\n

Perform ana yacs on real-time streaming data\n\n\n

Uncenstand the various NoSql altumaive da abase modula\n\n\n
<b><font fgcolor='#F700FF'>
    Suggested Reference Books:</font></b>\n\n\n

Bi 1 Frunks-Tuming the Big Dato Tioul Wave: Fincing Opportunities ntluch Data Streams with Acranced Analytics Wiley and SAS Business Series

, 2012 David Lochin. "Big Data Analy Eco: From Strategic Planning

to Toerprise todegration with Tools, Techno, and Graph, 2012

Springer Second Edition 2017,\n\n\n

Monae Minel i Michelle Chambers, and Ambiga Draj Big\n\n\n

Michael Berhed. Duvid J. Hanc, Intelligent Duto Analysis\n\n\n

Data, Big Analytics Energing Business Intelligence and Analytic Trends for Today's Businesses, Wiley, 2013\n\n\n

J. Sedalage and M. Fowler, "NoSQL, Distillec: A Brief Guide to the Emora na Vicrid of Putyulot Persistence, Addison Wesley Professional 2017,\n\n\n

Richard Corton, "Leaming R-A Step by step Function Guide 10 Data Analysis O'Re lly Media, 2013\n\n\n

</string>

<string name="csesem8pro12">Real Time Systems</string>
<string name="RTS8pro">
    \n\n\n<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>
    \n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 10 hrs.</font></b>\n\n\n

Introduction: Hard vs. Soft real time systems, A reference model of real time system. Real-time scheduling: Clock driven approach, Weighted Round-robin approach, Priority driven approach, Dynamic vs. static system, Effective Release Times and Deadlines, EDF and LST algorithm, Optimality and Non-Optimality of the EDF and LST algorithms, Off line vs. online Scheduling.\n\n\n
<b><font fgcolor='#F700FF'>
Module 2

    Lecture 6 hrs.</font></b>\n\n\n

Clock-Driven Scheduling: Static, Time-Driven scheduler, General structure of Cyclic Schedules, Cyclic Executives, Improving the Average Response Time Of Aperiodic Jobs, Scheduling Sporadic Jobs\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lecture 7 hrs.</font></b>\n\n\n

Priority Driven Scheduling Of Periodic Tasks: Fixe-priority vs. Dynamic priority algorithms, Maximum Schedulable Utilization, Optimality of the RM and DM algorithms, A Schedulability test for fixed-priority tasks with short response times, Sufficient Schedulability conditions for the RM and DM algorithms.\n\n\n
<b><font fgcolor='#F700FF'>
Module 4

    Lecture 6 hrs.</font></b>\n\n\n

Scheduling Aperiodic and Sporadic Jobs in Priority-Driven Systems: Assumptions and Approaches, Deferrable Servers, Sporadic Servers, Constant Utilization, Total Bandwidth and Weighted Fair-Queueing Servers\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 ecture 8 hrs.</font></b>\n\n\n

Resources and Resource Access control: Resource contention, resource access control, Non-preemptive critical section, Basic Priority-Inheritance protocol, Basic Priority Ceiling Protocol, Stack based, Priority-ceiling protocol, preemption ceiling protocol.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 6 Lecture 5 hrs.</font></b>\n\n\n

Multiprocessor scheduling, Resource Access Control, and Synchronization: Model of multiprocessor &amp; distributed systems, task assignment, multiprocessor Priority-ceiling protocol, Elements of Scheduling Algorithms For End-to-End Periodic Tasks-IPS protocols, PM protocols, MPM protocol.\n\n\n
<b><font fgcolor='#F700FF'>
    Suggested Books:</font>
</b>\n\n\n

•Real-Time system by Jane W. S. Liu, Pearson Education\n\n\n

Real-Time Systems by C. M. Krishna and K. G. Shin, McGraw Hill\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcome:\n\n\n</font></b>

After learning this subject, students will learn various types of Real Time Systems, Periodic and Aperiodic tasks, different types of scheduling algorithms in RTS(Clock Driven, Priority Driven), Priority Driven Scheduling Of Periodic Tasks, Priority Driven Scheduling of Aperiodic and Sporadic Jobs, Different protocols for resource access controls, Scheduling approach in multiprocessor Real Time Systems etc.\n\n\n
</string>
<string name="csesem8pro13">Block Chain</string>
<string name="BC8pro">\n\n\n
<b><font fgcolor='#F700FF'>
    Objective of the Course:</font></b>\n\n\n

To provide conceptual understanding of how block chain technology can be used to innovate and improve business processes. The course covers the technological underpinning of block Chain operations.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
Module 1

    Lectures 6 hrs.</font></b>\n\n\n

Introduction: Overview of Block chain, Public Ledgers, Bitcoin, Smart Contracts, Block in a Block chain, Transactions, Distributed Consensus, Public vs Private Block chain, Understanding Crypto currency to Block chain, Permissioned Model of Block chain, Overview of Security aspects of Block chain Basic Crypto Primitives: Cryptographic Hash Function, Properties of a hash function, Hash pointer and Merkle tree, Digital Signature, Public Key Cryptography, A basic cryptocurrency.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 10 hrs.</font></b>\n\n\n

Understanding Block chain with Crypto currency: Bitcoin and Block chain: Creation of coins, Payments and double spending, Bitcoin Scripts, Bitcoin P2P Network, Transaction in Bitcoin Network, Block Mining, Block propagation and block relay.\n\n\n

Working with Consensus in Bitcoin: Distributed consensus in open environments, Consensus in a Bitcoin network, Proof of Work (PoW) basic introduction, Hashcash PoW, Bitcoin PoW, Attacks on PoW and the monopoly problem, Proof of Stake, Proof of Burn and Proof of Elapsed Time, The life of a Bitcoin Miner, Mining Difficulty, Mining Pool.\n\n\n
<b><font fgcolor='#F700FF'>
Module 3

    Lectures 12 hrs.</font></b>\n\n\n

Understanding Block chain for Enterprises: Permissioned Block chain: Permissioned model and use cases, Design issues for Permissioned block chains, Execute contracts, State machine replication, Overview of Consensus models for permissioned block chain- Distributed consensus in closed environment, Paxos, RAFT Consensus, Byzantine general problem, Byzantine fault tolerant system, Lamport-Shostak-Pease BFT Algorithm, BFT over Asynchronous systems.\n\n\n

 Enterprise application of Block chain: Cross border payments, Know Your Customer (KYC), Food Security, Mortgage over Block chain, Block chain enabled Trade, We Trade Trade Finance Network, Supply Chain Financing, Identity on Block chain\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 12 hrs.</font></b>\n\n\n

Block chain application development: Hyperledger Fabric- Architecture, Identities and Policies, Membership and Access Control, Channels, Transaction Validation, Writing smart contract using Hyperledger Fabric, Writing smart contract using Ethereum, Overview of Ripple and Corda.\n\n\n
<b><font fgcolor='#F700FF'>
        List of Suggested Books:</font>
</b>\n\n\n

•Melanie Swan, "Block Chain: Blueprint for a New Economy", O\'Reilly, 2015\n\n\n

Josh Thompsons, "Block Chain: The Block Chain for Beginners- Guide to Block chain Technology and Leveraging Block Chain Programming"\n\n\n

"Daniel Drescher, "Block Chain Basics", Apress; 1st edition, 2017\n\n\n

Anshul Kaushik, "Block Chain and Crypto Currencies", Khanna Publishing House, Delhi.\n\n\n

Imran Bashir, "Mastering Block Chain: Distributed Ledger Technology, Decentralization and Smart Contracts Explained", Packt Publishing\n\n\n

Ritesh Modi, "Solidity Programming Essentials: A Beginner\'s Guide to Build Smart Contracts for Ethereum and Block Chain", Packt Publishing\n\n\n

Salman Baset, Luc Desrosiers, Nitin Gaur, Petr Novotny, Anthony O\'Dowd, Venkatraman Ramakrishna, "Hands-On Block Chain with Hyperledger: Building Decentralized Applications with Hyperledger Fabric and Composer", Import, 2018\n\n\n
<b><font fgcolor='#F700FF'>
    Learning Outcomes:</font></b>\n\n\n

 At the end of this course, the students will be able to:\n\n\n

Understand block chain technology.\n\n\n

•Develop block chain based solutions and write smart contract using Hyperledger Fabric and Ethereum frameworks.\n\n\n

•Build and deploy block chain application for on premise and cloud based architecture.\n\n\n

•Integrate ideas from various domains and implement them using block chain technology in different perspectives.\n\n\n

</string>

<string name="csesem8pro14">Optimization Techniques</string>
<string name="OT8pro">\n\n\n
<b><font fgcolor='#F700FF'>
        Objectives of the course</font>
</b>
    \n\n\n

•To introduce optimization techniques using both linear and non-linear programming\n\n\n

•After an adequate introduction to linear algebra and probability theory and optimization techniques students will learn to frame engineering minima maxima problems in the framework of optimization problems.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents\n\n\n</font></b>
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 10 hrs.</font></b>\n\n\n

Optimization Techniques, Model Formulation, models, General L.R Formulation, Simplex Techniques, Sensitivity Analysis, Inventory Control Models\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 8 hrs.</font></b>\n\n\n

Formulation of a LPP - Graphical solution revised simplex method - duality theory - dual simplex method - sensitivity analysis - parametric programming\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3</font></b>\n\n\n t flow problem - max flow problem - CPM/PERT\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 7 hrs.</font></b>\n\n\n

Scheduling and sequencing - single server and multiple server models - deterministic inventory models - Probabilistic inventory control models - Geometric Programming.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lectures 8 hrs.</font></b>\n\n\n

Competitive Models, Single and Multi-channel Problems, Sequencing Models, Dynamic Programming, Flow in Networks, Elementary Graph Theory, Game Theory Simulation\n\n\n
<b><font fgcolor='#F700FF'>
    Suggested Books:</font></b>\n\n\n

H.A. Taha, Operations Research, An Introduction, PHI, 2008\n\n\n

H.M. Wagner, Principles of Operations Research, PHI, Delhi, 1982\n\n\n
<b><font fgcolor='#F700FF'>
    Suggested Reference Books:\n\n\n</font></b>

J.C. Pant, Introduction to Optimisation: Operations Research, Jain Brothers, Delhi, 2008\n\n\n

Hitler Libermann Operations Research: McGraw Hill Pub. 2009\n\n\n

Pannerselvam, Operations Research: Prentice Hall of India 2010\n\n\n

Harvey M Wagner, Principles of Operations Research: Prentice Hall of India 2010\n\n\n
<b><font fgcolor='#F700FF'>
    Course Outcomes:</font></b>\n\n\n

After completion of course:\n\n\n

Students should able to apply the dynamic programming to solve problems of discreet and continuous variables.\n\n\n

•Students should able to apply the concept of non-linear programming\n\n\n

•Students should able to carry out sensitivity analysis\n\n\n

•Student should able to model the real world problem and simulate it.\n\n\n

</string>
<string name="csesem8pro15">Information Retrieval</string>
<string name="IR8pro">\n\n\n
 <b><font fgcolor='#F700FF'>
     Objective of the Course:</font></b>\n\n\n

To introduce students to Information Retrieval systems and to study theoretical aspects as well as implementation issues of classical and modern retrieval problems. Discuss mechanisms of web search along with the details of ranking algorithms. Introduce basic concepts of text categorization and recommender systems.\n\n\n
<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lectures 12 hrs.</font></b>\n\n\n

Introduction to Information Retrieval: Goals and history of IR. The impact of the web on IR, unstructured and semi-structured text. Basic IR Models Inverted index and Boolean queries. Boolean and vector-space retrieval models; ranked retrieval; text-similarity metrics; TF-IDF (term frequency/inverse document frequency) weighting; cosine similarity; Basic Tokenizing, Indexing, and Implementation of Vector-Space Retrieval: Simple tokenizing, stop-word removal, and stemming, inverted indices; efficient processing with sparse vectors\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lectures 8 hrs.</font></b>\n\n\n

Experimental Evaluation of IR: Performance metrics: recall, precision, and F-measure; Query Operations: Relevance feedback; Query expansion; Query languages. Text Representation: Word statistics; Porter stemmer; index term selection; using thesauri. metadata and markup languages (SGML, HTML, XML)\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lectures 10 hrs.</font></b>\n\n\n

Web Search: Introduction; Spidering; Interfaces; Link Analysis Text Categorization: Categorization algorithms; Language-Model Based Retrieval; Text Clustering; Applications to web search and information organization.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lectures 10 hrs.</font></b>\n\n\n

Recommender Systems: Collaborative filtering and

content-based recommendation of documents and products. Information Extraction and Integration: Extracting data from text, semantic web; collecting and integrating specialized information on the web.\n\n\n
<b><font fgcolor='#F700FF'>
    List of Suggested Books:</font></b>\n\n\n

Manning, Raghavan and Schutze, "Introduction to Information Retrieval", Cambridge

University Press.\n\n\n

Baeza-Yates and Ribeiro-Neto, "Modern Information Retrieval", Addison Wesley.\n\n\n

</string>

<string name="csesem8pro16">Bitcoin And Crypto Curriencies</string>
<string name="BCC8pro">\n\n\n<b><font fgcolor='#F700FF'>
    Detailed contents</font></b>\n\n\n
<b><font fgcolor='#F700FF'>
    Module 1 Lecture 8 hrs.</font></b>\n\n\n

Introduction to Cryptography, Cryptographic Hash Functions, SHA-256, Hash Pointers and Data Structures, Merkle tree.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 2 Lecture 8 hrs.</font></b>\n\n\n

Digital Signatures, Elliptic curve group, Elliptic Curve Digital Signature Algorithm (ECDSA). Public Keys as Identities, A Simple Crypto currency.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 3 Lecture 8 hrs.</font></b>\n\n\n

Centralization vs. Decentralization, Distributed consensus, Consensus without identity using a block chain, Incentives and proof of work. Bitcoin transactions, Bitcoin Scripts, Applications of Bitcoin scripts, Bitcoin blocks, The Bitcoin network.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 4 Lecture 8 hrs.</font></b>\n\n\n

Simple Local Storage, Hot and Cold Storage, Splitting and Sharing Keys, Online Wallets and Exchanges, Payment Services, Transaction Fees, Currency Exchange Markets.\n\n\n
<b><font fgcolor='#F700FF'>
    Module 5 Lecture 8 hrs.</font></b>\n\n\n

Bitcoin Mining, Mining pools, Mining incentives and strategies. Bitcoin and Anonymity: Anonymity Basics, Mixing, Zerocoin and Zerocash.\n\n\n
<b><font fgcolor='#F700FF'>
        Reference Book:</font>
</b>\n\n\n

•Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller and Steven Goldfeder, Bitcoin and Cryptocurrency Technologies, 2016.\n\n\n

</string>




































</resources>